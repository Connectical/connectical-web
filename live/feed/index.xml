<?xml version="1.0" encoding="iso-8859-1"?>
<rss version="2.0"><channel><title>Connectical Blog Feed</title><link>http://connectical.com/blog</link><description>Blog for Connectical staff and collaborators</description><lastBuildDate>Wed, 09 Oct 2013 19:25:17 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>DMon 0.4.2 &#8220;Three Wise Men&#8221; released</title><link>http://perezdecastro.org/2012/dmon-0-4-2-released.html</link><description>&lt;p&gt;Don't expect lots of surprises this time, but an otherwise smooth
maintenance release that includes a couple of minor niceties. Changes
since version 0.4.1 mostly affected the logging tools (&lt;code&gt;dlog&lt;/code&gt;, &lt;code&gt;dslog&lt;/code&gt;
and &lt;code&gt;drlog&lt;/code&gt;):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Logging tools now may accept input from arbitrary file descriptors,
using the &lt;code&gt;--input-fd&lt;/code&gt; command line option. This enables to do some
nice redirection tricks from shell scripts and other programs which
use them.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Logging tools now support adding an arbitrary string in front of
logged lines using the &lt;code&gt;--prefix&lt;/code&gt; option. For example, this allows
to send the output of several commands to a FIFO, and when reading
from it it would be possible to know which command originated the
message in the resulting output:&lt;/p&gt;
&lt;pre&gt;&lt;code class="lang-bash"&gt;mkfifo logpipe
dmon cat logpipe -- dlog -t /var/log/combined
dmon command1 -- dlog -p command1: logpipe
dmon command2 -- dlog -p command2: logpipe
dmon command3 -- dlog -p command3: logpipe&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Logging tools now handle the &lt;code&gt;INT&lt;/code&gt;, &lt;code&gt;TERM&lt;/code&gt; and &lt;code&gt;HUP&lt;/code&gt; signals. When
signalled, they will flush buffers to disk, and in the case of
&lt;code&gt;drlog&lt;/code&gt; check if log rotation is needed; for &lt;code&gt;INT&lt;/code&gt; and &lt;code&gt;TERM&lt;/code&gt; the
processes will also shut down gracefully.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;The manual pages now also include the long variant of command line
options.&lt;/li&gt;
&lt;li&gt;A number of small improvements: better error messages, removal of
some unused code, updated to a slightly newer version of &lt;code&gt;libwheel&lt;/code&gt;,
better and more consistent command line parsing, silent Make
rules...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Make sure you grab the &lt;a href="http://people.igalia.com/aperez/files/dmon-0.4.2.tar.gz"&gt;tarball&lt;/a&gt; while it is still fresh, and do not
forget that a package for &lt;a href="http://archlinux.org"&gt;Arch Linux&lt;/a&gt; is available &lt;a&gt;in the AUR&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update, Jan 30th:&lt;/strong&gt; Packages for DMon 0.4.2 are now also available at
the &lt;a href="http://apt.igalia.com"&gt;Igalia APT respoitory&lt;/a&gt;, for &lt;code&gt;i386&lt;/code&gt;, &lt;code&gt;amd64&lt;/code&gt; and &lt;code&gt;armel&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Happy 2012!&lt;/p&gt;</description><author>Adrián Pérez</author><pubDate>2012-01-07T20:13:00.000Z</pubDate></item><item><title>DMon 0.4: New guts &amp; new features</title><link>http://perezdecastro.org/2011/dmon-0-4-new-guts-and-new-features.html</link><description>&lt;p&gt;Wow, that was a lot of time without me posting anything (five months),
mostly because I am investing most of my spare time after work here in
Finland for socializing. Still, from time to time one has to take a
break, and there is no better way than just staying at home watching &lt;a href="http://www.thetvdb.com/?tab=series&amp;amp;id=75760&amp;amp;lid=7"&gt;a
good TV series&lt;/a&gt;, or doing some coding on &lt;a href="https://gitorious.org/dmon"&gt;pet&lt;/a&gt; &lt;a href="https://gitorious.org/wheel"&gt;projects&lt;/a&gt;. The
later means that DMon got some love, and that &lt;a href="https://gitorious.org/dmon/dmon/trees/v0.4.1"&gt;version 0.4.1&lt;/a&gt; is now
available (tarball &lt;a href="http://people.igalia.com/aperez/files/dmon-0.4.1.tar.gz"&gt;here&lt;/a&gt;, mirror &lt;a href="http://furi-ku.org/files/dmon-0.4.1.tar.gz"&gt;there&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;So... What's new?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Most changes in this release are not user-visible, because I have been
rewriting the insides of DMon to use &lt;a href="https://gitorious.org/wheel"&gt;libwheel&lt;/a&gt;, which enables
some nice features and allowed to reduce the amount of code (&lt;a href="http://en.wikipedia.org/wiki/Minimalism#Minimalist_design"&gt;less is
more!&lt;/a&gt;). Anyway this is a summary of what's new since version 0.3.7:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Long command line options are now supported. Parsing and error
reporting of arguments was improved.&lt;/li&gt;
&lt;li&gt;It is now possible for &lt;code&gt;dmon&lt;/code&gt; to read options from text files, by
passing &lt;code&gt;--config&lt;/code&gt; (or &lt;code&gt;-C&lt;/code&gt;) as first command line option, followed
by a path to a file. File format is dead easy: long command line
options (without trailing dashes) followed by arguments, one option
per line, and lines starting with dashes are ignored.&lt;/li&gt;
&lt;li&gt;Real-time updates on the status of the processes being monitored can
be written now to a file (which may be a FIFO), using the
&lt;code&gt;--write-info&lt;/code&gt; option. This may be useful to integrate &lt;code&gt;dmon&lt;/code&gt; with
other tools. The manual page has now a section documenting the
format of the generated status information.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;drlog&lt;/code&gt; log tool, which supersedes &lt;code&gt;rotlog&lt;/code&gt;, was added. Use it
to log to a directory of auto-rotated log files.&lt;/li&gt;
&lt;li&gt;A multicall binary is now built by default (that is: one binary
contains all tools, which can be symlinked under different names).
Separate binaries can still be built by passing &lt;code&gt;NO_MULTICALL=1&lt;/code&gt; to
Make.&lt;/li&gt;
&lt;li&gt;A number of small cleanups and fixes, both in the code and manual
pages.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;What next?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Those are some vague ideas of things I would like to implement at some
point:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add support for &lt;a href="https://secure.wikimedia.org/wikipedia/en/wiki/Cgroups"&gt;control groups&lt;/a&gt;. This would allow to do nice
tricks like isolating processes more reliably, killing subprocesses
spawned by daemons that create new process groups in the wild, finer
controls on resource usage limits... As this is a Linux-specific
feature, it will be a compile-time option.&lt;/li&gt;
&lt;li&gt;Handling of lock files. It may be interesting to have the ability of
locking some particular file before launching processes. This would
be mostly useful for tasks that are ran once under control of
&lt;code&gt;dmon&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;A &lt;code&gt;start-stop-daemon&lt;/code&gt; compatible replacement that uses DMon under
the hood. This would allow for easily hooking it in traditional SysV
init scripts.&lt;/li&gt;
&lt;li&gt;DInit: This would be a replacement for &lt;a href="http://en.wikipedia.org/wiki/Init"&gt;init(8)&lt;/a&gt;, which would use
&lt;code&gt;dmon&lt;/code&gt; to monitor processes. Why implementing another contender when
there's already &lt;a href="http://freedesktop.org/wiki/Software/systemd/"&gt;systemd&lt;/a&gt;, &lt;a href="http://upstart.ubuntu.com/"&gt;upstart&lt;/a&gt; and a &lt;a href="http://smarden.org/runit/"&gt;bunch&lt;/a&gt; of
&lt;a href="http://initng.org/trac"&gt;other&lt;/a&gt; &lt;a href="http://roy.marples.name/projects/openrc"&gt;implementations&lt;/a&gt;? First of all, I like hacking this
kind of system-level things so I will be doing it &#8220;for fun&#8221;; second,
I would like to focus on making it suitable for embedded devices and
diskless operation (e.g. cluster nodes or minimal/rescue boot
images).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Some final words...&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Sorry, no Debian packages this time, but now that I am using &lt;a href="http://www.archlinux.org/"&gt;Arch
Linux&lt;/a&gt; again there is a package &lt;a href="http://aur.archlinux.org/packages.php?ID=50553"&gt;available at the AUR&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also, I will be in Berlin in August, from 5th to 12th... Yes, you
guessed it: I'm attending the Desktop Summit:&lt;/p&gt;
&lt;p&gt;&lt;img alt="attending the Desktop Summit in Berlin" src="https://www.desktopsummit.org/sites/www.desktopsummit.org/files/DS2011banner.png" /&gt;&lt;/p&gt;
&lt;p&gt;See you around... and happy monitoring!&lt;/p&gt;</description><author>Adrián Pérez</author><pubDate>2011-07-25T08:50:00.000Z</pubDate></item><item><title>DMon status report: evolution to 0.3.7</title><link>http://perezdecastro.org/2010/dmon-status-report-0-3-7.html</link><description>&lt;p&gt;When I &lt;a href="http://perezdecastro.org/aperez/2010/08/dmon-process-monitoring-with-style/"&gt;first wrote about DMon&lt;/a&gt;, I pointed out that version 0.3 could
be already installed from &lt;a href="http://apt.igalia.com"&gt;our APT repository&lt;/a&gt;, which hosts flavours
for &lt;code&gt;i386&lt;/code&gt;, &lt;code&gt;amd64&lt;/code&gt; and &lt;code&gt;armel&lt;/code&gt;. Five weeks have passed and I feel like
I have to write a status update now that &lt;a href="http://gitorious.org/dmon/dmon/commits/v0.3.7"&gt;0.3.7 is out&lt;/a&gt;. It is not a
big version number change because DMon behaves essentially as in 0.3,
but a number of new features were added and bugs fixed.&lt;/p&gt;
&lt;p&gt;Let's see which juicy bits are available on top of the features it
already had:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Additional groups can now be specified using the &lt;code&gt;-u&lt;/code&gt; and &lt;code&gt;-U&lt;/code&gt;
options. As a side effect of their extended syntax, options &lt;code&gt;-g&lt;/code&gt; and
&lt;code&gt;-G&lt;/code&gt; were removed as they are no longer needed.&lt;/li&gt;
&lt;li&gt;Setting of resource usage limits is now supported with the &lt;code&gt;-r&lt;/code&gt;.
This uses &lt;a href="http://linux.die.net/man/2/setrlimit"&gt;setrlimit(2)&lt;/a&gt; under the hood.&lt;/li&gt;
&lt;li&gt;DMon can now wait for some time before re-running commands by
specifying time intervals with the &lt;code&gt;-i&lt;/code&gt; option. Think about it as a
poor man's recurrent job scheduler.&lt;/li&gt;
&lt;li&gt;Environment variables can now be manipulated (including deletion) by
means of the &lt;code&gt;-E&lt;/code&gt; option.&lt;/li&gt;
&lt;li&gt;All commands (&lt;code&gt;dmon&lt;/code&gt;, &lt;code&gt;dlog&lt;/code&gt;, &lt;code&gt;dslog&lt;/code&gt;) can now be built as a single
multicall binary. This saves disk space and some kilobytes of
memory, which is interestinhg for embedded environments.&lt;/li&gt;
&lt;li&gt;Tools now honor the &lt;code&gt;DMON_OPTIONS&lt;/code&gt;, &lt;code&gt;DLOG_OPTIONS&lt;/code&gt; and
&lt;code&gt;DSLOG_OPTIONS&lt;/code&gt;; environment variables. When defined, they will be
interpreted as additional command line arguments. Actual command
line arguments take precedence, so values given in environment
variablels can still be overriden.&lt;/li&gt;
&lt;li&gt;A small &lt;code&gt;libnofork.so&lt;/code&gt; library is included, which overrides the
system-provided &lt;a href="http://linux.die.net/man/2/fork"&gt;fork(2)&lt;/a&gt; and &lt;a href="http://linux.die.net/man/3/daemon"&gt;daemon(3)&lt;/a&gt; functions in such a
way that the library can be preloaded
(&lt;code&gt;dmon -E LD_PRELOAD=libnofork.so ....&lt;/code&gt;) to make programs not to
fork. Very useful for applications which create new daemon processes
inconditionally so they can be properly monitored. This is tested
only under GNU/Linux with &lt;code&gt;glibc&lt;/code&gt; at the moment, use with care!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Apart from new features, a couple of bugs related to error handling were
fixed, for better reliability.&lt;/p&gt;
&lt;p&gt;Last but not least, I would like to thank my friend &lt;a href="http://ajdiaz.wordpress.com/"&gt;Andrés J. Díaz&lt;/a&gt;
who is using DMon and provided feedback and ideas for some of those new
features.&lt;/p&gt;
&lt;p&gt;Happy monitoring!&lt;/p&gt;</description><author>Adrián Pérez</author><pubDate>2010-10-04T15:06:00.000Z</pubDate></item><item><title>DMon: Process monitoring with style</title><link>http://perezdecastro.org/2010/dmon-process-monitoring-with-style.html</link><description>&lt;p&gt;Have you ever wanted to run a lengthy process making sure that it will
be restarted on failure? Did you need at some point to daemonize a
&#8220;normal&#8221; program? Well, maybe you already knew about &lt;a href="http://cr.yp.to/daemontools.html"&gt;daemontools&lt;/a&gt;,
&lt;a href="http://smarden.org/runit/"&gt;runit&lt;/a&gt;, &lt;a href="http://offog.org/code/freedt.html"&gt;freedt&lt;/a&gt;, &lt;a href="http://supervisord.org/"&gt;Supervisor&lt;/a&gt;, &lt;a href="http://upstart.ubuntu.com/"&gt;upstart&lt;/a&gt; or &#8212;recently&#8212;
&lt;a href="http://www.freedesktop.org/wiki/Software/systemd"&gt;systemd&lt;/a&gt;. They already do a good job respawning processes, but there
are three single things that neither of them are capable of doing:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Running a &lt;strong&gt;single command&lt;/strong&gt; and exiting when it exits successfully.&lt;/li&gt;
&lt;li&gt;Running commands &lt;strong&gt;interactively&lt;/strong&gt;, without daemonizing nor
detaching from the terminal.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Temporarily suspending&lt;/strong&gt; execution when the system load goes over
a configurable value, &lt;strong&gt;and resuming execution&lt;/strong&gt; automatically as
soon as the load drops below another configurable value.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you ever needed at least one of those features, then &lt;a href="http://gitorious.org/dmon"&gt;DMon&lt;/a&gt; is
probably what you want. If unsure, read the examples below &#8212; you might
find some inspiration for use-cases!&lt;/p&gt;
&lt;h2&gt;The Story&lt;/h2&gt;
&lt;p&gt;Years ago I discovered &lt;a href="http://en.wikipedia.org/wiki/Daniel_J._Bernstein"&gt;Daniel J. Bernstein&lt;/a&gt;'s &lt;a href="http://cr.yp.to/qmail.html"&gt;qmail&lt;/a&gt;, and with it
came the rest of the &#8220;DJB-ware&#8221; software stack: &lt;a href="http://cr.yp.to/djbdns.html"&gt;djbdns&lt;/a&gt;, &lt;a href="http://cr.yp.to/ucspi-tcp.html"&gt;ucspi&lt;/a&gt;,
&lt;a href="http://cr.yp.to/daemontools.html"&gt;daemontools&lt;/a&gt;... and their philosophy!)&lt;/p&gt;
&lt;p&gt;Some weeks ago I coded &lt;a href="http://blogs.igalia.com/aperez/2010/07/vfand-a-daemon-to-control-fan-speed-in-vaio-laptops/"&gt;vfand&lt;/a&gt;, a small &#8220;non-daemon&#8221; to control the
speed of the fan in my Vaio laptop because it was overheating. I am
lazy, so I deliberately left out daemonization and suggested launching
it from &lt;a href="http://linux.die.net/man/8/init"&gt;init(8)&lt;/a&gt; &#8212; because I knew that DJB's tools leave
daemonization and logging to other tools which &lt;a href="http://onethingwell.org/post/457050307/about-one-thing-well"&gt;just do one thing
well&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Days back I had to make a huge data copy in a mission-critical mail
server, and used the mighty &lt;a href="http://www.samba.org/rsync/"&gt;rsync&lt;/a&gt; tool because I wanted the copy to
be interruptible so I could stop it when the system load was getting
high and then resuming the data copy. I did that manually (&lt;code&gt;Ctrl-Z&lt;/code&gt;,
wait, &lt;code&gt;fg&lt;/code&gt;, repeat), and I do not like performing automatable tasks.
Fortunately I seldom do this kind of tasks.&lt;/p&gt;
&lt;p&gt;Do you recognize the pattern? &lt;a href="http://gitorious.org/dmon"&gt;DMon&lt;/a&gt; is a subproduct of what I have
been doing lately, applying the knowledge about &lt;code&gt;daemontools&lt;/code&gt; I already
had.&lt;/p&gt;
&lt;h2&gt;How does it work? &#8212; Modus operandi&lt;/h2&gt;
&lt;p&gt;In short it works àla &lt;code&gt;daemontools&lt;/code&gt; without control sockets and without
using script files for launching processes. All options are specified in
the command line, as long as the commands to be run. Like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dmon [options] command [command-options] 
     [-- log-command [log-command-options]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As an example, consider the following command line:&lt;/p&gt;
&lt;pre&gt;&lt;code class="lang-bash"&gt;dmon cron -f -- dlog /var/log/cron.log&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is what DMon wil do:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Daemonize itself.&lt;/li&gt;
&lt;li&gt;Create a &lt;a href="http://linux.die.net/man/2/pipe"&gt;pipe(2)&lt;/a&gt;, which will be used to connect the output of
the given &lt;code&gt;command&lt;/code&gt; to the input of the &lt;code&gt;log-command&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Spawn both the &lt;code&gt;command&lt;/code&gt; and the &lt;code&gt;log-command&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Silently wait. If some child is terminated, it will be respawned.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;That is pretty close to what the &lt;code&gt;supervise&lt;/code&gt; program included in
&lt;code&gt;daemontools&lt;/code&gt; does, so it have already all the advantages of it, plus
without needing stuff in the file system. Passing options to &lt;code&gt;dmon&lt;/code&gt; will
trigger some of the extra features provided:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Passing &lt;code&gt;-n&lt;/code&gt; makes it run in the foreground. This is very useful in
conjunction with &lt;code&gt;-1&lt;/code&gt;: with tha latter the processes will be only
respawned if their exit status is non-zero.&lt;/li&gt;
&lt;li&gt;If you want to log messages from standard error, use &lt;code&gt;-e&lt;/code&gt; and both
standard output and standard error will be piped to the logging
command.&lt;/li&gt;
&lt;li&gt;For faulty programs which could get somewhat &#8220;locked&#8221; and sometimes
take too much time to run, you may pass a maximum running time with
&lt;code&gt;-t&lt;/code&gt;. When the timeout is reached the program will be forcibly
killed and then started again.&lt;/li&gt;
&lt;li&gt;Finally, for pausing the program over a given value of system load,
use &lt;code&gt;-L&lt;/code&gt;. After pausing execution (by means of the &lt;code&gt;SIGSTOP&lt;/code&gt;
signal), it will be resumed when the system load falls below the
value given with &lt;code&gt;-l&lt;/code&gt; (by sending &lt;code&gt;SIGCONT&lt;/code&gt;). The signals used are
the standard ones used for this duty e.g. by the shell, so almost
every well-behaved program will work without modifications.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The DMon package already includes a couple tools ready to be used as
logging command: &lt;code&gt;dlog&lt;/code&gt; will append lines to a log file, optionally
adding a timestamp to them, and &lt;code&gt;dsyslog&lt;/code&gt; will send lines to &lt;a href="http://linux.die.net/man/3/syslog"&gt;the system
log&lt;/a&gt;. You can use any logging tool which works with &lt;code&gt;daemontools&lt;/code&gt;,
like &lt;code&gt;multilog&lt;/code&gt; (part of it) or my own &lt;a href="http://gitorious.org/rotlog"&gt;rotlog&lt;/a&gt; ;-)&lt;/p&gt;
&lt;h2&gt;DMon use-cases &amp;amp; Examples&lt;/h2&gt;
&lt;p&gt;Running &lt;code&gt;rsync&lt;/code&gt; in a terminal (without detaching), pausing the copy when
the system load is above &lt;code&gt;4.0&lt;/code&gt;, retrying until the copy succeeds:&lt;/p&gt;
&lt;pre&gt;&lt;code class="lang-bash"&gt;dmon -n -1 -L 4.0 rsync -az /path/to/srcdir /path/to/destdir&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Launching &lt;a href="http://gitorious.org/vfand"&gt;vfand&lt;/a&gt; as a daemon, logging errors to the local &lt;code&gt;syslog&lt;/code&gt;,
and saving the PID of the process (the second line terminates &lt;code&gt;dmon&lt;/code&gt;,
&lt;code&gt;vfand&lt;/code&gt; and &lt;code&gt;dsyslog&lt;/code&gt; in a single shot):&lt;/p&gt;
&lt;pre&gt;&lt;code class="lang-bash"&gt;dmon -e -p /var/run/vfand.pid vfand -- dsyslog vfand
kill $(cat /var/run/vfand.pid)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Starting the &lt;a href="http://mediatomb.cc/"&gt;MediaTomb&lt;/a&gt; UPnP server as a user &lt;code&gt;mediatomb&lt;/code&gt; (i.e. at
bootup), saving auto-rotated logs with &lt;a href="http://gitorious.org/rotlog"&gt;rotlog&lt;/a&gt; running as user &lt;code&gt;log&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class="lang-bash"&gt;dmon -e -u mediatomb -g mediatomb -U log -G log 
     mediatomb --interface eth0 --home /mnt/mediafiles 
     -- rotlog -c /var/log/mediatomb/&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Final Words&lt;/h2&gt;
&lt;p&gt;It was fun for me to hack in &lt;a href="http://gitorious.org/dmon"&gt;DMon&lt;/a&gt; because C is a language I learnt
to love, and using it from time to time is nice to not lose contact with
it. Also, I had a clear idea of what I wanted to do for solving a
particular problem, which is great for keeping focus.&lt;/p&gt;
&lt;p&gt;Albeit DMon is already in its third release (namely &lt;a href="http://gitorious.org/dmon/dmon/commit/d342f15dcd7262b420dba3be5ac96dadbab48952"&gt;version 0.3&lt;/a&gt;) and
I have been using it since its first inceptions, it may contain bugs as
any other piece of software. Do not hesitate to &lt;a href="mailto:aperez@igalia.com"&gt;drop me a line&lt;/a&gt; with
your complaints and suggestions &#8212; or even better: get yourself a clone
of the &lt;a href="http://git-scm.com"&gt;Git&lt;/a&gt; &lt;a href="http://gitorious.org/dmon/dmon/"&gt;repository&lt;/a&gt; and use its &lt;a href="http://www.kernel.org/pub/software/scm/git/docs/git-send-email.html"&gt;send-email&lt;/a&gt; awesomeness!&lt;/p&gt;
&lt;p&gt;Happy monitoring!&lt;/p&gt;</description><author>Adrián Pérez</author><pubDate>2010-08-26T22:18:00.000Z</pubDate></item><item><title>vfand: A daemon to control fan speed in Vaio laptops</title><link>http://perezdecastro.org/2010/vfand-a-daemon-to-control-fan-speed-in-vaio-laptops.html</link><description>&lt;p&gt;Today I got tired of getting frequent lock-ups in my laptop, a &lt;a href="http://www.small-laptops.com/sony-vaio-tz11/"&gt;Vaio
TZ11MN/N&lt;/a&gt; which has been serving me just fine the during the past
three years. I decided to investigate a bit because the machine was
quite hot, and after some digging I found that the fan speed was being
kept below 45, by reading from &lt;code&gt;/sys&lt;/code&gt;. For example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cat /sys/devices/platform/sony-laptop/fanspeed
44&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then I noticed that writing to the file would also work, but the
embedded controller would insist in lowering the speed, so I ran the
following loop from the shell:&lt;/p&gt;
&lt;pre&gt;&lt;code class="lang-bash"&gt;&lt;span class="keyword"&gt;while&lt;/span&gt; sleep 5 ; &lt;span class="keyword"&gt;do&lt;/span&gt;
   &lt;span class="keyword"&gt;echo&lt;/span&gt; 200 &amp;gt; /sys/devices/platform/sony-laptop/fanspeed
&lt;span class="keyword"&gt;done&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That snip caused the fan to stay running at a higher speed, and the
laptop temperature started to fall slowly. Then I tried &lt;a href="http://linux.die.net/man/8/fancontrol"&gt;fancontrol&lt;/a&gt;,
without luck: the fans in my TZ11 cannot be controlled with it. Then I
decided to write my own, and &lt;a href="http://gitorious.org/vfand/"&gt;vfand&lt;/a&gt; was born.&lt;/p&gt;
&lt;p&gt;Even when some temperature sensors are there (e.g. the one in the CPU
die), I found no easy way of determining the &lt;em&gt;overall&lt;/em&gt; temperature of
the machine using entries from &lt;code&gt;/sys&lt;/code&gt;. Next was to determine which
driver is in charge of the fan entry under &lt;code&gt;/sys&lt;/code&gt;, to check whether it
can do something else. The fan entry is managed by the &lt;a href="http://lxr.linux.no/linux+v2.6.34.1/drivers/char/sonypi.c"&gt;sonypi&lt;/a&gt;
driver, which actually does support opening &lt;code&gt;/dev/sonypi&lt;/code&gt; and getting
the temperature using an &lt;code&gt;ioctl&lt;/code&gt; called &lt;code&gt;SONYPI_IOCGTEMP&lt;/code&gt;. It looked
fine, so I implemented my little daemon in terms of &lt;code&gt;ioctl&lt;/code&gt; on that
device, so it should would with all Vaio laptops supported by the
driver.&lt;/p&gt;
&lt;p&gt;The speed control algorithm is quite simple at the moment, but it works
fine for me:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When the temperature is less than a user-configurable value (35º C
by default), the fan speed is set to the minimum possible value.&lt;/li&gt;
&lt;li&gt;When the temperature is above a user-configurable value (55 ºC by
default), the fan speed is set to the maximum possible value.&lt;/li&gt;
&lt;li&gt;If the temperature is in between the configurable values, then a
linear formula is used to calculate the speed. As the temperature
raises, the fan speed will be raised, too (and vice versa).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The daemon is naïve, so it will log errors to the standard error stream,
and it will not detach itself from the controlling terminal. An option
is running it from &lt;code&gt;/etc/rc.local&lt;/code&gt; until I add an init script which uses
&lt;code&gt;start-stop-daemon&lt;/code&gt; (or something else) to launch it.&lt;/p&gt;
&lt;p&gt;Another option, which is a bit bizarre but will ensure that it is always
running even if it does, is doing:&lt;/p&gt;
&lt;pre&gt;&lt;code class="lang-bash"&gt;&lt;span class="keyword"&gt;echo&lt;/span&gt; &lt;span class="string"&gt;'vf:2345:respawn:/usr/bin/vfand'&lt;/span&gt; &amp;gt;&amp;gt; /etc/inittab
telinit q&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Last, but not least, I have already uploaded a simple, working package
to &lt;a href="http://apt.igalia.com"&gt;our APT repository&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I hope this is useful for some other Vaio users out there.&lt;/p&gt;</description><author>Adrián Pérez</author><pubDate>2010-07-27T17:45:00.000Z</pubDate></item><item><title>How to make the Python interpreter friendlier</title><link>http://perezdecastro.org/2010/make-the-python-interpreter-friendlier.html</link><description>&lt;p&gt;We are doing quite some coding in &lt;a href="http://www.python.org"&gt;Python&lt;/a&gt; lately (well, and &lt;a href="http://perezdecastro.org/aperez/2010/04/surrender-to-subrender/"&gt;also at
spare time&lt;/a&gt;), and it is always nice to have the possibility of having
the interactive interpreter to play with. But sometimes my mind refuses
to stop working, so I wondered whether there would be a simple way of
improving the overall user experience when using the stock Python
interpreter without needing to install alternative ones like
&lt;a href="http://bpython-interpreter.org/"&gt;bpython&lt;/a&gt;, &lt;a href="http://ipython.scipy.org/"&gt;IPython&lt;/a&gt; or &lt;a href="http://www.reinteract.org/"&gt;Reinteract&lt;/a&gt;. The idea is to have
something &lt;em&gt;a bit better&lt;/em&gt; without throwing in additional dependencies.&lt;/p&gt;
&lt;p&gt;So I lurked a bit by the documentation and learnt about the
&lt;a href="http://docs.python.org/using/cmdline.html#envvar-PYTHONSTARTUP"&gt;PYTHONSTARTUP&lt;/a&gt; environment variable. Next step? Fired out &lt;code&gt;$EDITOR&lt;/code&gt;
and created a &lt;code&gt;~/.startup.py&lt;/code&gt; file with the following contents:&lt;/p&gt;
&lt;pre&gt;&lt;code class="lang-python"&gt;&lt;span class="keyword"&gt;import&lt;/span&gt; readline, atexit, os, rlcompleter

historypath = os.path.expanduser(&lt;span class="string"&gt;"~/.pyhistory"&lt;/span&gt;)
readline.parse_and_bind(&lt;span class="string"&gt;"tab: complete"&lt;/span&gt;)

&lt;span class="function"&gt;&lt;span class="keyword"&gt;def&lt;/span&gt; &lt;span class="title"&gt;save_history&lt;/span&gt;&lt;span class="params"&gt;(historypath=historypath)&lt;/span&gt;:&lt;/span&gt;
    &lt;span class="keyword"&gt;import&lt;/span&gt; readline
    readline.write_history_file(historypath)

&lt;span class="keyword"&gt;if&lt;/span&gt; os.path.exists(historypath):
    readline.read_history_file(historypath)

atexit.register(save_history)

&lt;span class="keyword"&gt;del&lt;/span&gt; os, atexit, readline, save_history, historypath, rlcompleter&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The most important thing is to bind the &lt;code&gt;Tab&lt;/code&gt; key for completion. That
&lt;code&gt;complete&lt;/code&gt; function already comes bundled with the Python binding for
&lt;a href="http://tiswww.case.edu/php/chet/readline/rltop.html"&gt;readline&lt;/a&gt; (and compatibles), and will complete names for functions,
variables, classes, methods, etc.&lt;/p&gt;
&lt;p&gt;The rest of the snippet deals with saving the history of entered lines
to a file when the interpreter is exited. The trick there is the
&lt;code&gt;historypath=historypath&lt;/code&gt;, to make that variable an &lt;a href="http://en.wikipedia.org/wiki/Upvalue"&gt;upvalue&lt;/a&gt;. Being
that way, we can clean up everything (last line) after initialization,
so the interpreter will not get its global namespace poluted.&lt;/p&gt;
&lt;p&gt;Finally, make &lt;code&gt;PYTHONSTARTUP&lt;/code&gt; to be defined in every shell creation:&lt;/p&gt;
&lt;pre&gt;&lt;code class="lang-bash"&gt;&lt;span class="keyword"&gt;echo&lt;/span&gt; &lt;span class="string"&gt;'export PYTHONSTARTUP="$HOME/.startup.py"'&lt;/span&gt; &amp;gt;&amp;gt; .bashrc&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now re-launch your shell, type in &lt;code&gt;python&lt;/code&gt; and enjoy your
freshly-supercharged interpreter:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ exec bash -l
$ python
Python 2.5.5 (r255:77872, Mar 20 2010, 05:19:32)
[GCC 4.4.3] on linux2
Type &amp;quot;help&amp;quot;, &amp;quot;copyright&amp;quot;, &amp;quot;credits&amp;quot; or &amp;quot;license&amp;quot; for more information.
&amp;gt;&amp;gt;&amp;gt; import os
&amp;gt;&amp;gt;&amp;gt; os. # tap TAB two-times here
Display all 224 possibilities? (y or n)&lt;/code&gt;&lt;/pre&gt;</description><author>Adrián Pérez</author><pubDate>2010-04-15T15:02:00.000Z</pubDate></item><item><title>Python recipe: Functional config file parsing</title><link>http://perezdecastro.org/2009/python-recipe-functional-config-file-parsing.html</link><description>&lt;p&gt;Sometimes one has to parse programmatically some file containing
&lt;code&gt;key=value&lt;/code&gt; pairs. In the world of systems administration this means
configuration files most of the time. Also, one thing I like is
&lt;a href="http://en.wikipedia.org/wiki/Functional_programming"&gt;functional programming&lt;/a&gt;, but in the real world one ends up making
almost all of the code in &lt;a href="http://en.wikipedia.org/wiki/Imperative_programming"&gt;imperative&lt;/a&gt; style. Python allows some
functional constructs, and sometimes I like to use them to make code
most concise, because it express better what the code is trying to do or
just because I wanted to melt my mind doing some functional tricks.&lt;/p&gt;
&lt;p&gt;First, let me introduce the code:&lt;/p&gt;
&lt;pre&gt;&lt;code class="lang-python"&gt;&lt;span class="keyword"&gt;from&lt;/span&gt; itertools &lt;span class="keyword"&gt;import&lt;/span&gt; imap, ifilter

config_items = &lt;span class="keyword"&gt;lambda&lt;/span&gt; iterable: 
    imap(&lt;span class="keyword"&gt;lambda&lt;/span&gt; (k, v): (k.strip(), v.strip()),
        imap(&lt;span class="keyword"&gt;lambda&lt;/span&gt; s: s.split(&lt;span class="string"&gt;"="&lt;/span&gt;, &lt;span class="number"&gt;1&lt;/span&gt;),
            ifilter(&lt;span class="keyword"&gt;lambda&lt;/span&gt; s: s &lt;span class="keyword"&gt;and&lt;/span&gt; &lt;span class="keyword"&gt;not&lt;/span&gt; s.startswith(&lt;span class="string"&gt;"#"&lt;/span&gt;),
                imap(&lt;span class="keyword"&gt;lambda&lt;/span&gt; s: s.strip(), iterable))))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Neat, huh? As promised in the title, this is functional. And yes, I am
aware of &lt;a href="http://docs.python.org/library/configparser.html"&gt;ConfigParser&lt;/a&gt;, but I do not need its full power, and also I
have found some problems with files containing &lt;a href="http://en.wikipedia.org/wiki/Unicode"&gt;Unicode&lt;/a&gt; strings.&lt;/p&gt;
&lt;p&gt;I think this is one of the most beautiful snippets of code I have ever
written in Python: it makes just one thing well, and it is terse and
concise. Moreover, it is quite easy to explain.&lt;/p&gt;
&lt;h2&gt;How does it work&lt;/h2&gt;
&lt;p&gt;I have just written that it is easy to explain how this works. Okay, I
will dissect this beast one line at a time, starting at the innermost.
But first, a quick introduction to &lt;code&gt;imap()&lt;/code&gt; and &lt;code&gt;ifilter&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;imap()&lt;/code&gt;&lt;/strong&gt;: Works like &lt;code&gt;map()&lt;/code&gt;, which returns a list whose
contents are the results of applying a function (first argument) to
each of the elements of another list (the second argument). The
difference is that &lt;code&gt;imap()&lt;/code&gt; uses &lt;a href="http://www.python.org/dev/peps/pep-0289/"&gt;generators&lt;/a&gt; instead.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;ifilter()&lt;/code&gt;&lt;/strong&gt;: This one works like &lt;code&gt;filter()&lt;/code&gt; and will also return
a list, whose contents are the items of another list (second
argument) for which the result of calling the given function (first
argument) is &lt;code&gt;True&lt;/code&gt;. This one also works with generators.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now, let us start with the first one:&lt;/p&gt;
&lt;pre&gt;&lt;code class="lang-python"&gt;imap(&lt;span class="keyword"&gt;lambda&lt;/span&gt; s: s.strip(), iterable)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This picks each line, and removes whitespace sitting at the left and and
the right of the string.&lt;/p&gt;
&lt;pre&gt;&lt;code class="lang-python"&gt;ifilter(&lt;span class="keyword"&gt;lambda&lt;/span&gt; s: s &lt;span class="keyword"&gt;and&lt;/span&gt; &lt;span class="keyword"&gt;not&lt;/span&gt; s.startswith(&lt;span class="string"&gt;"#"&lt;/span&gt;),&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We want to keep &lt;em&gt;interesting&lt;/em&gt; lines: empty lines and comment-lines
starting with a hash mark (&lt;code&gt;#&lt;/code&gt;) must be thrashed away. We check for
lines which &lt;em&gt;both&lt;/em&gt; are not empty and that do not start with a hash-mark.&lt;/p&gt;
&lt;pre&gt;&lt;code class="lang-python"&gt;imap(&lt;span class="keyword"&gt;lambda&lt;/span&gt; s: s.split(&lt;span class="string"&gt;"="&lt;/span&gt;, &lt;span class="number"&gt;1&lt;/span&gt;),&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That one picks each string and splits it at the first &lt;code&gt;=&lt;/code&gt; character,
thus separating the key from the value. This is what converts each
string into a &lt;code&gt;(key, value)&lt;/code&gt; tuple.&lt;/p&gt;
&lt;pre&gt;&lt;code class="lang-python"&gt;imap(&lt;span class="keyword"&gt;lambda&lt;/span&gt; (k, v): (k.strip(), v.strip()),&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is the last remaining detail: Removes extra leading and trailing
whitespace from the keys and values of the generated tuples. This is
needed for removing the spaces around the &lt;code&gt;=&lt;/code&gt; character.&lt;/p&gt;
&lt;h2&gt;How to use it&lt;/h2&gt;
&lt;p&gt;Fire in the interpreter, type in (or copy-and-paste) the above code and
guess by yourself:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; text = &amp;quot;&amp;quot;&amp;quot;a = 1
... b = this is b&amp;quot;&amp;quot;&amp;quot;
&amp;gt;&amp;gt;&amp;gt; tuple(config_items(text.splitlines()))
(('a', '1'), ('b', 'this is b'))
&amp;gt;&amp;gt;&amp;gt; dict(config_items(text.splitlines()))
{'a': '1', 'b': 'this is b'}
&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So you pass it &lt;del&gt;a list&lt;/del&gt; an iterable which yields lines, and it will
return another iterable, which yields &lt;code&gt;(key, value)&lt;/code&gt; tuples. Thanks to
how &lt;code&gt;dict()&lt;/code&gt; is defined, we can directly pass the result to it and get a
dictionary.&lt;/p&gt;
&lt;p&gt;But it would be useful as well to use it on files, so here we go:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; file(&amp;quot;test.conf&amp;quot;, &amp;quot;w&amp;quot;).write(text)
&amp;gt;&amp;gt;&amp;gt; dict(config_items(file(&amp;quot;test.conf&amp;quot;)))
{'a': '1', 'b': 'this is B'}
&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For your convenience, you may want to define a helper function if it
makes you feel more comfortable:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; def config_file_items(path):
...    with file(path, &amp;quot;rU&amp;quot;) as f:
...        return config_items(f)
...
&amp;gt;&amp;gt;&amp;gt; dict(config_file_items(&amp;quot;test.conf&amp;quot;))
{'a': '1', 'b': 'this is B'}
&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Extra niceties&lt;/h2&gt;
&lt;p&gt;I have already mentioned that this code uses &lt;a href="http://www.python.org/dev/peps/pep-0289/"&gt;generators&lt;/a&gt; in its
entirety. What is passed from one function to another in the chain of
&lt;code&gt;imap()&lt;/code&gt; and &lt;code&gt;ifilter()&lt;/code&gt; calls are &lt;em&gt;always&lt;/em&gt; generators. This means that
if &lt;code&gt;config_items()&lt;/code&gt; is used to read a big file (e.g. some hundreds of
megabytes) &lt;em&gt;only one line is in memory at a given time&lt;/em&gt;. This is why I
did not use &lt;code&gt;map()&lt;/code&gt; and &lt;code&gt;filter()&lt;/code&gt; but their &#8220;incremental&#8221; counterparts
from the &lt;code&gt;itertools&lt;/code&gt; module. So the bottom line is that this may not be
the most efficient implementation out there, but it is good and is
capable of working over arbitrarily long sequences of data while the
function remains small and understandable.&lt;/p&gt;
&lt;h2&gt;Error Handling&lt;/h2&gt;
&lt;p&gt;Whenever the input is not well formed, then this function will raise
&lt;code&gt;ValueError&lt;/code&gt;, or when a &lt;code&gt;=&lt;/code&gt; character is not found in some line. This
means that you can do something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class="lang-python"&gt;&lt;span class="keyword"&gt;import&lt;/span&gt; sys
&lt;span class="keyword"&gt;try&lt;/span&gt;:
    items = dict(config_items(sys.stdin))
&lt;span class="keyword"&gt;except&lt;/span&gt; ValueError:
    &lt;span class="keyword"&gt;raise&lt;/span&gt; SystemExit(&lt;span class="string"&gt;"Malformed 'key=value' input in standard input"&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Of course more elaborate error checking could be done i.e. to be able of
showing to the user the exact offending line number, but the goal is to
keep things as simple as possible. Also the syntax of those simple
configuration files is so simple that it should be fairy simple for the
user to spot typos.&lt;/p&gt;
&lt;h2&gt;Final words and advice&lt;/h2&gt;
&lt;p&gt;My advice is that if you have the possibility, make your Python code in
such a way that it uses generators, unless you are sure that it will
&lt;em&gt;always&lt;/em&gt; handle reasonably small amounts of data.&lt;/p&gt;
&lt;p&gt;I hope that things are explained well enough, and (who knows!) maybe
this can help someone to better understand why generators are a good
idea. I will also be happy if you came here looking for some code to
parse simple configuration files and this did the trick for you.&lt;/p&gt;</description><author>Adrián Pérez</author><pubDate>2009-12-12T02:17:00.000Z</pubDate></item><item><title>Factor out your Apache-fu with mod_macro</title><link>http://perezdecastro.org/2009/factor-out-your-apache-fu-with-mod_macro.html</link><description>&lt;p&gt;For nearly all HTTP-serving related work, our software of choice is the
&lt;a href="http://httpd.apache.org/"&gt;Apache&lt;/a&gt; web server. Lately, we have been moving some old setups which
were still running Apache 1.3 to the latest version in the 2.x series.
This may be a lot of work when the number of virtual hosts you are
serving is far from low, or if you have some lengthy, repetitive
configuration blocks which must be modified everytime you want introduce
some change. One may be tempted to auto-generate configuration snippets
from something else using some quick Bash/Perl/Python/Whatever script,
but there is a more elegant solution: meet &lt;a href="http://www.cri.ensmp.fr/~coelho/mod_macro/"&gt;mod_macro&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As the name suggests, it is an Apache 2.x module which allows for
defining snippets with customizable optional parameters. Take this
real-world example from &lt;code&gt;/etc/apache2/mods-available/macro.conf&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class="lang-apache"&gt;&lt;span class="keyword"&gt;AuthType&lt;/span&gt; basic
&lt;span class="keyword"&gt;AuthBasicProvider&lt;/span&gt; ldap
&lt;span class="keyword"&gt;AuthLDAPUrl&lt;/span&gt; ldap://ldap.local/dc=yoursite,dc=com?uid
&lt;span class="keyword"&gt;AuthLDAPGroupAttribute&lt;/span&gt; uniqueMember
&lt;span class="keyword"&gt;AuthLDAPGroupAttributeIsDN&lt;/span&gt; &lt;span class="literal"&gt;On&lt;/span&gt;
&lt;span class="keyword"&gt;Require&lt;/span&gt; ldap-&lt;span class="keyword"&gt;group&lt;/span&gt; cn=$&lt;span class="keyword"&gt;group&lt;/span&gt;,ou=&lt;span class="keyword"&gt;Group&lt;/span&gt;,dc=yoursite,dc=com&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is a common setup in most of our services, so now everytime one
wants to add autentication against the LDAP server, it is only a matter
of adding an &lt;code&gt;Use&lt;/code&gt; clause in the proper place:&lt;/p&gt;
&lt;pre&gt;&lt;code class="lang-apache"&gt;&lt;span class="comment"&gt;# Put this into the virtual host configuration block:&lt;/span&gt;
Use AuthLDAPSetup wwwusers&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ta-da! This is 5 lines shorter, and less error-prone. Also, if some day
some extra configuration is needed to authenticate using LDAP, it is
enough to change the macro definition, and changes will be automatically
propagated to all places where it is used.&lt;/p&gt;
&lt;p&gt;Wrapping up, you may consider installing &lt;a href="http://www.cri.ensmp.fr/~coelho/mod_macro/"&gt;mod_macro&lt;/a&gt; in your Apache
installs for the following reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style="background-color: #ffffff;"&gt;Greatly simplifies repeated
code snippets in configuration files.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="background-color: #ffffff;"&gt;It is integrated with the
web server: no external tools are needed.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="background-color: #ffffff;"&gt;Is especially useful to make
changes to big sites in a single shot.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="background-color: #ffffff;"&gt;Does not add overhead to
request processing, only to initial configuration file parsing at
server startup.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style="background-color: #ffffff;"&gt;It is simple enough to learn
and use in a couple of minutes.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;</description><author>Adrián Pérez</author><pubDate>2009-10-19T10:23:00.000Z</pubDate></item><item><title>More DebConf 9 adventures</title><link>http://perezdecastro.org/2009/more-debconf9-adventures.html</link><description>&lt;p&gt;Now it looks like it is time to complete my &lt;a href="http://perezdecastro.org/aperez/2009/07/1st-day-at-debconf9/"&gt;previous post about
DebConf 9&lt;/a&gt;, after a tiresome journey back from Cáceres to Coruña the
30th, an &lt;a href="http://blogs.igalia.com/agomez/2008/10/22/igalia-is-yours/"&gt;Igalia assembly&lt;/a&gt; the 31st (the first one ever for me :-D),
and sleeping for more than 14 hours today.&lt;/p&gt;
&lt;p&gt;Fortunately I did not need to travel alone, as &lt;a href="http://blogs.gnome.org/diegoe/"&gt;Diego&lt;/a&gt; came with me to
visit Coruña and the journey was more enjoyable than the other way
around. To make the most out of the occasion, we followed an alternative
route via  &lt;a href="http://en.wikipedia.org/wiki/Ciudad_Rodrigo"&gt;Ciudad Rodrigo&lt;/a&gt; (where we had lunch and bought some red
wine, olive oil, and &lt;a href="http://en.wikipedia.org/wiki/Embutido"&gt;Iberian &#8220;embutido&#8221;&lt;/a&gt;: chorizo, salchichón and
cured loin), then &lt;a href="http://en.wikipedia.org/wiki/Porto"&gt;Porto&lt;/a&gt; (where we saw the bridges by Gustave Eiffel
and his disciples), &lt;a href="http://en.wikipedia.org/wiki/Valen%C3%A7a,_Portugal"&gt;Valença do Minho&lt;/a&gt; (where we bought some goods
which are sold in Portugal: salted butter, cheese, coffee, &lt;a href="http://en.wikipedia.org/wiki/Guava"&gt;guava&lt;/a&gt;
jelly...) and finally we made a longer stop at &lt;a href="http://en.wikipedia.org/wiki/Santiago_de_compostela"&gt;Santiago de
Compostela&lt;/a&gt; in order to see the cathedral and the old town area while
eating a sandwich. It took some time to complete the trip, but was far
funnier that going alone to Cáceres.&lt;/p&gt;
&lt;p&gt;But going back on to DebConf 9, here is the rest of my batch of lectures
and events, including summaries of them:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://penta.debconf.org/dc9_schedule/events/374.en.html"&gt;Free travel instead of free beer&lt;/a&gt;: Very nice presentation of
photographs from &lt;em&gt;all&lt;/em&gt; past DebConf and FLOSS related events, by
Andreas Tille who has attended loads of them! This was a quite
relaxing event, and the people there made the thing more enjoyable
by telling the others about anecdotes and funny things about the
places and the things which happened all along the world in past
conferences.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://penta.debconf.org/dc9_schedule/events/409.en.html"&gt;Stable/Volatile/Backports ecosystem&lt;/a&gt;: This was a nice chat trying
to define how the different Debian repositories should interact
between each other. I think that the nicer part was including the
not-so-official &lt;a href="http://backports.org/"&gt;backports.org repositories&lt;/a&gt;, but nothing has been
said about including &lt;a href="http://debian-multimedia.org/"&gt;debian-multimedia&lt;/a&gt;. It is a good thing to be
coherent with the &lt;a href="http://www.debian.org/social_contract#guidelines"&gt;DFSG&lt;/a&gt; and being picky with which packages are
actually in the main repository, but in my opinion something should
be done to support &lt;em&gt;the packages the users want&lt;/em&gt; in some way,
including debian-multimedia as well.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://penta.debconf.org/dc9_schedule/events/382.en.html"&gt;Qemu for Debian developers&lt;/a&gt;: Not something which could be
considered astonishing, but I have learned a couple of nice Qemu
tricks with this. This was an interesting introduction for people
wanting to make packages for architectures different than the one
they are running.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://penta.debconf.org/dc9_schedule/events/409.en.html"&gt;Drowning in bugs&lt;/a&gt;: This was an
extremely interesting chat about how it would be possible to
actually get people to do &lt;a href="http://nedbatchelder.com/text/triaging.html"&gt;bug triaging&lt;/a&gt; in Debian. Some solutions
were outlined, like having some kind of teams for people to belong
to, so they get at least some social recognition (e.g. &#8220;look, I am
part of the Debian Foo-Bar Bugsquad&#8221; and the like), adding a score
meter to the BTS like in the &lt;a href="http://bugs.gnome.org"&gt;Gnome Bugzilla&lt;/a&gt; and so on. I think
that &lt;a href="http://wiki.debian.org/SummerOfCode2007/DebbugsWebUI"&gt;something&lt;/a&gt; which
&lt;span style="text-decoration: line-through;"&gt;should&lt;/span&gt; is being
cooked right now will help a lot with this.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://penta.debconf.org/dc9_schedule/events/444.en.html"&gt;Libvirt, hypervisor independent virtual machine management&lt;/a&gt;: I
heard before about &lt;a href="http://libvirt.org/"&gt;libvirt&lt;/a&gt;, but have always thought that it
looked like an unneccessary layer of indirection about &lt;a href="http://linux-vserver.org/"&gt;THE
virtualization technology&lt;/a&gt; you want to use. The facts are that it
does not have Linux-vServer support (well, it &lt;a href="http://www.redhat.com/archives/libvir-list/2008-January/msg00097.html"&gt;might&lt;/a&gt;) and that
one gets an interesting feature: remote management of virtual
machines. Does that feature that pose much differences from using
SSH to open a remote session? Probably if you use &lt;a href="http://www.qemu.org/"&gt;Qemu&lt;/a&gt; and/or
&lt;a href="http://www.xen.org/"&gt;Xen&lt;/a&gt;, but I do not see the point of having the additional hassle
of another software layer.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://penta.debconf.org/dc9_schedule/events/459.en.html"&gt;Debian Redesign&lt;/a&gt;: Agnieszka aka &#8220;pixelgirl&#8221; proposed a new design
for some stuff related to Debian, logo, colours, fonts and website.
Some minor work for boot splash screens and is also there in the
pack. It was funny to see how people asked questions about the
openness of the license of the new font used for the logo, when the
&lt;a href="http://wiki.debian.org/DebianLogo"&gt;old one&lt;/a&gt; has a commercial one... I hope that she does not get
annoyed too much by the rest of the community, because I also think
there is a &lt;em&gt;real&lt;/em&gt; and &lt;em&gt;urgent&lt;/em&gt; need to give some love to how things
look in Debian. And having people which has the neccessary knowledge
to properly design nice things is great, so the community should
support her.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://penta.debconf.org/dc9_schedule/events/434.en.html"&gt;State of the Bug Tracking System&lt;/a&gt;: Don Armstrong was making some
improvements and cleanups to the old &lt;code&gt;debbugs&lt;/code&gt; big code clean-up,
and presented to the public one new feature which allows to mirror
the state of the BTS and run a local copy. This made all the
audience clap hands like crazy, as this allows for speedier
operations, especially for searching and filtering in reports.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://penta.debconf.org/dc9_schedule/events/429.en.html"&gt;Introducing DebConf10&lt;/a&gt;: New York will held the next DebConf,
which will be also the 10th anniversary of the event. The main venue
will be at the &lt;a href="http://www.columbia.edu/"&gt;Columbia University&lt;/a&gt; which looks great for such a
thing. The main issue could be problems for people living in certain
countries to get a visa so they can travel there the next year, so
the organizers will be even providing legal advice and support. I
just hope that this will not make the next edition be a &#8220;DebConf
light&#8221; and that people from all around the world is represented the
next year.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://penta.debconf.org/dc9_schedule/events/412.en.html"&gt;Debian on Network Attached Storage (NAS) devices&lt;/a&gt;: First of all,
as most igalians have a NSLU2, I would want to say that Martin has
already found the perfect and improved replacement for them: the
&lt;a href="http://www.engadget.com/2009/02/24/marvells-sheevaplug-linux-pc-fits-in-its-power-adapter/"&gt;Marvell SheevaPlug&lt;/a&gt;. It is great to see how well GNU/Linux is
spreading over to all kinds of devices and architectures. And it is
even nicer to see how the developers have designed a way for
seamlessly installing Debian in this kind of devices in such a way
that an average user could do it without requiring ninja skills.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That's a good selection of the lectures and events I attended to. Of
course there were some more interesting things, like the conference
dinner, the &lt;a href="http://www.flickr.com/photos/aigarius/3769719319/"&gt;massive group photo&lt;/a&gt;, giving a &lt;a href="https://penta.debconf.org/dc9_schedule/events/450.en.html"&gt;talk&lt;/a&gt; (&lt;a href="https://penta.debconf.org/dc9_schedule/attachments/114_slides.pdf"&gt;slides
here&lt;/a&gt;), the odyssey all along Cáceres to find a proper Irish tavern...
The pint of Guinness with &lt;a href="http://gwolf.org/"&gt;Gunnar&lt;/a&gt;, &lt;a href="http://blog.kov.eti.br/"&gt;Gustavo&lt;/a&gt; and &lt;a href="http://blogs.gnome.org/diegoe/"&gt;Diego&lt;/a&gt; was one
of the best moments of the conference ;-)&lt;/p&gt;
&lt;p&gt;Quick summary: going to DebConf 9 was a rewarding experience, even when I
ended up extremely tired after it. Let's try to attend some more
conferences anytime soon...&lt;/p&gt;</description><author>Adrián Pérez</author><pubDate>2009-08-01T22:40:00.000Z</pubDate></item><item><title>First day at the DebConf 9</title><link>http://perezdecastro.org/2009/1st-day-at-debconf9.html</link><description>&lt;p&gt;I arrived yesterday at the main venue after a the long trip by car:
~700km in a car &lt;em&gt;without&lt;/em&gt; air conditioning. I was very tired so I
headed up for my room (which is in an ancient building at the &lt;a href="http://whc.unesco.org/en/list/384"&gt;old town
area of Cáceres&lt;/a&gt;), had a shower and decided to take a nap... with so
much success that I slept for two hours and a miracle made me wake up
just in time for the &lt;a href="https://penta.debconf.org/dc9_schedule/events/367.en.html"&gt;Cheese &amp;amp; wine party&lt;/a&gt;. It was great to taste an
uncountable amount of kinds of cheese, wine and liquors from places all
around the world. Among a lot of tasty stuff, it was really enlightening
to try out some &lt;em&gt;real&lt;/em&gt; japanese &lt;a href="http://en.wikipedia.org/wiki/Sake"&gt;sake&lt;/a&gt; and &lt;a href="http://www.hubspeanuts.com/"&gt;the best peanuts I ever
tried&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;After a quick breakfast today in the morning, my personal schedule
included attending the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://penta.debconf.org/dc9_schedule/events/413.en.html"&gt;Using FOSSology for license analysis in Debian&lt;/a&gt;: a &lt;a href="http://fossology.org/"&gt;tool&lt;/a&gt; which
determines which license a package has by examining its sources and
looking for license disclaimers and similar texts contained in
source code was presented. This way even cases where each source
file may have a different license can be easily identified. For
packagers this makes easier to check whether a software component
complies with the packaging policy.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://penta.debconf.org/dc9_schedule/events/418.en.html"&gt;Not your grandpa's debhelper&lt;/a&gt;: This one really catched my
attention, as I do some packaging from time to time it is very
interesting to know about new incarnations of tools which suppose an
aid to this task. The new &lt;code&gt;dh&lt;/code&gt; thing is able of &lt;a href="http://kitenet.net/~joey/blog/entry/debhelper_dh_overrides/"&gt;greatly
simplifying&lt;/a&gt; build rules. I wanna try it!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://penta.debconf.org/dc9_schedule/events/416.en.html"&gt;Debian System Administraors BoF&lt;/a&gt;: I thought that it could be
interesting to know how systems used for running the Debian
infrastructure are configured. Three of the members of the team
asked lots of questions from the audience, most of them being about
e-mail services and whether it would be possible to improve spam
handling.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://penta.debconf.org/dc9_schedule/events/388.en.html"&gt;Scratchbox2 for cross-compiling Debian&lt;/a&gt;: It was a shame that
there was no projector nor something similar for Riku to give an
introduction to &lt;a href="http://www.freedesktop.org/wiki/Software/sbox2"&gt;Scratchbox 2&lt;/a&gt;, which looks like a good step
forward. For example now it is possible to use it without &lt;code&gt;root&lt;/code&gt;
privileges at all.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://penta.debconf.org/dc9_schedule/events/408.en.html"&gt;Point releases - How to update stable more efficiently&lt;/a&gt;: I have
missed some bits of this lecture because I was sitting near the end
of the room, but if I understood correctly there is a plan for
rolling updates sooner into the Debian stable package set by using a
repository in the fashion of the Ubuntu &#8220;proposed-updates&#8221; one, so
users can get theirs hands on sooner on the packages in order to
provide the needed feedback for stabilization.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After having a light dinner I went along with &lt;a href="http://blogs.gnome.org/diegoe/"&gt;Diego&lt;/a&gt; for a walk along
the old town area, to see how does it look at night. The perfect
accompaniment was a glass of beer and ice cream.&lt;/p&gt;</description><author>Adrián Pérez</author><pubDate>2009-07-26T23:19:00.000Z</pubDate></item><item><title>See you at DebConf 9</title><link>http://perezdecastro.org/2009/see-you-at-debconf9.html</link><description>&lt;p class="image"&gt;
  &lt;a href="http://debconf9.debconf.org/"&gt;&lt;img alt="DebConf9 Logo" src="http://blogs.igalia.com/aperez/files/2009/07/dc9logo.png" /&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;I will pick up my car and embark myself into a
8-hour trip to reach Cáceres tomorrow in the evening, after 699 km of
road trip. The goal: attending (and enjoying!) the &lt;a href="http://debconf9.debconf.org"&gt;ninth edition of the
Debian Conference&lt;/a&gt;, which has already started. As I do not know
exactly the arrival time, I will skip the dinner tomorrow, but I will do
my best to be at the &lt;a href="https://penta.debconf.org/dc9_schedule/events/367.en.html"&gt;Cheese &amp;amp; wine party&lt;/a&gt; and bringing some &#8220;tetilla&#8221;
(small breast) cheese from Galicia, which has a funny shape as you can
imagine:&lt;/p&gt;
&lt;p class="image"&gt;
  &lt;a href="http://en.wikipedia.org/wiki/Tetilla_cheese"&gt;&lt;img alt="Tetilla cheese" src="http://upload.wikimedia.org/wikipedia/commons/thumb/d/d2/Queso_tetilla_entre_otros.jpg/290px-Queso_tetilla_entre_otros.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;I am looking forward to be there tomorrow, as this will be my first time
at a big community event and it really looks like &lt;a href="http://blogs.igalia.com/jmunhoz/2009/07/23/gran-canaria-desktop-summit09/"&gt;this&lt;/a&gt; &lt;a href="http://blogs.igalia.com/berto/2009/07/14/back-from-gran-canaria/"&gt;kind&lt;/a&gt;
&lt;a href="http://blogs.igalia.com/mario/2009/07/07/gnome-party-at-gcds-09/"&gt;of&lt;/a&gt; &lt;a href="http://blogs.igalia.com/apinheiro/2009/07/08/my-last-day-in-gcds/"&gt;things&lt;/a&gt; are really interesting and a great opportunity to get
in touch with latest developments, learning lots of new stuff, and
meeting people from all around the world... The latter is a &lt;em&gt;must&lt;/em&gt; for
me, as I will not know anyone there because there will be no more
&lt;a href="http://planet.igalia.com/"&gt;Igalians&lt;/a&gt; attending the conference. So if you will be there from 25th
to 30th feel free to approach me and have some chat.&lt;/p&gt;
&lt;p&gt;Last, but not least, shell scripters (and anyone interested) may want to
know that have a &lt;a href="https://penta.debconf.org/dc9_schedule/events/450.en.html"&gt;slot in the unofficial&lt;/a&gt; track for a  lecture on
Shaft, a tool which we have been using lately to do declarative unit
testing of shell scripts. I am just now polishing the slides, preparing
a couple of examples and preparing the code for release.&lt;/p&gt;
&lt;p&gt;See you there!&lt;/p&gt;</description><author>Adrián Pérez</author><pubDate>2009-07-24T15:01:00.000Z</pubDate></item><item><title>Python talks Collectd</title><link>http://perezdecastro.org/2009/python-talks-collectd.html</link><description>&lt;p&gt;I have been playing lately with &lt;a href="http://collectd.org"&gt;collectd&lt;/a&gt; again, which is a very nice
piece of software to monitor out things, especially when you want more
than just the network statistics that other tools like &lt;a href="http://oss.oetiker.ch/mrtg/"&gt;MRTG&lt;/a&gt;. In a
coffee break &lt;a href="http://blogs.igalia.com/jmunhoz/"&gt;someone&lt;/a&gt; commented that it would be interesting to
process and display some if the data sent by collectd daemons installed
in machines in real-time, and it sounded like a funny idea, so the first
thing I did was implementing the network protocol. At the moment I have
a working pure-&lt;a href="http://python.org"&gt;Python&lt;/a&gt; implementation of it working: &lt;a href="http://people.igalia.com/aperez/files/collectd.py"&gt;collectd.py&lt;/a&gt;,
capable of receiving data (sending data is stil work in progress).&lt;/p&gt;
&lt;p&gt;As a quick introduction, you could use the module as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code class="lang-python"&gt;&lt;span class="keyword"&gt;from&lt;/span&gt; collectd &lt;span class="keyword"&gt;import&lt;/span&gt; Reader

rdr = Reader()
&lt;span class="keyword"&gt;while&lt;/span&gt; &lt;span class="built_in"&gt;True&lt;/span&gt;:
    &lt;span class="keyword"&gt;print&lt;/span&gt; &lt;span class="string"&gt;"-"&lt;/span&gt; * &lt;span class="number"&gt;80&lt;/span&gt;
    &lt;span class="keyword"&gt;for&lt;/span&gt; item &lt;span class="keyword"&gt;in&lt;/span&gt; rdr.interpret():
        &lt;span class="keyword"&gt;print&lt;/span&gt; item&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will join the default IPv4 multicast group (&lt;code&gt;239.19274.66&lt;/code&gt;) used by
collectd (sorry, IPv6 support is incomplete) and start listening for
incoming UDP packets in the default port (&lt;code&gt;25826&lt;/code&gt;), will interpret each
incoming data packet, and then print each component of the data packet
to standard output in a rather readable format:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[1237749608] localhost.localdomain/swap/swap/used [(1, 48082944.0)]
[1237749608] localhost.localdomain/swap/swap/free [(1, 1007009792.0)]
[1237749608] localhost.localdomain/swap/swap/cached [(1, 18640896.0)]
[1237749608] localhost.localdomain/users/users [(1, 5.0)]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Each data item is an instance of &lt;code&gt;collectd.Values&lt;/code&gt; (which behaves mostly
as a list, and can contain multiple values) and &lt;code&gt;collectd.Notification&lt;/code&gt;.
Both of them share some fields inherited from &lt;code&gt;collectd.Data&lt;/code&gt;. For
example, you could filter messages regarding swap space usage from
machines containing &lt;code&gt;foobar&lt;/code&gt; in their host names:&lt;/p&gt;
&lt;pre&gt;&lt;code class="lang-python"&gt;&lt;span class="keyword"&gt;if&lt;/span&gt; &lt;span class="string"&gt;"foobar"&lt;/span&gt; &lt;span class="keyword"&gt;in&lt;/span&gt; item.host &lt;span class="keyword"&gt;and&lt;/span&gt; item.plugin == &lt;span class="string"&gt;"swap"&lt;/span&gt;:
    &lt;span class="keyword"&gt;print&lt;/span&gt; item&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you want to bind to a particular address/port or join any other
multicast group than de default (sorry: joining multiple groups is not
implemented right now) you can pass parameters to the constructor:&lt;/p&gt;
&lt;pre&gt;&lt;code class="lang-python"&gt;rdr = collectd.Reader(host=&lt;span class="string"&gt;"192.168.0.32"&lt;/span&gt;, port=&lt;span class="number"&gt;9000&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The protocol was pretty straightforward to interpret, the hardest part
was guessing how to properly handle multicast, as I never had to deal
with it before. Now it is time to spend some time with &lt;a href="http://cairographics.org/pycairo/"&gt;PyCairo&lt;/a&gt;, or
even &lt;a href="http://www.lorenzogil.com/projects/pycha/"&gt;PyCha&lt;/a&gt; which looks pretty convenient, and make a small
application which dumps real-time graphs to a window :-)&lt;/p&gt;</description><author>Adrián Pérez</author><pubDate>2009-03-22T21:32:00.000Z</pubDate></item><item><title>Tip: Faster remote shells with multiplexed SSH</title><link>http://perezdecastro.org/2008/tip-ssh-mux.html</link><description>&lt;p&gt;Edit &lt;code&gt;~/.ssh/config&lt;/code&gt; (or &lt;code&gt;/etc/ssh/ssh_config&lt;/code&gt; for sitewide
configuration) and add the following snippet:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Host *
   ControlMaster auto
   ControlPersist 120
   ControlPath ~/.ssh/socket-%r@%h:%p&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will create a socket for each set &lt;em&gt;(user, machine, port)&lt;/em&gt; when the
first SSH session is opened. Further sessions will see the socket and
use it instead of opening a new connection, multiplexing all concurrent
connections via the same connection. The same goes for &lt;code&gt;scp&lt;/code&gt; and &lt;code&gt;sftp&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Nice side-effects of this:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;No functionality is lost at all.&lt;/li&gt;
&lt;li&gt;SSH sessions will open faster, as there is no need to establish a
connection.&lt;/li&gt;
&lt;li&gt;You will not need to enter you password everytime (but note that
maybe you should be using public-key authentication).&lt;/li&gt;
&lt;li&gt;You can open several sessions to servers which put a limit on the
number of simultaneous connections.&lt;/li&gt;
&lt;li&gt;If you are a sysadmin, you can limit the number of SSH connections
to exactly one per user :-)&lt;/li&gt;
&lt;/ul&gt;</description><author>Adrián Pérez</author><pubDate>2008-06-26T16:37:00.000Z</pubDate></item><item><title>More btrfs goodness: snapshots</title><link>http://perezdecastro.org/2008/more-btrfs-goodness-snapshots.html</link><description>&lt;p&gt;As I am currently working with KVM &lt;a href="http://kvm.qumranet.com/kvmwiki"&gt;KVM&lt;/a&gt; and I will have some big disk
image files hanging around, I thought it could be a good opportunity to
give a try to the &lt;a href="http://btrfs.wiki.kernel.org/"&gt;&lt;code&gt;btrfs&lt;/code&gt;&lt;/a&gt; snapshot and subvolume support.&lt;/p&gt;
&lt;p&gt;First of all: snapshots and subvolumes &lt;em&gt;are the same&lt;/em&gt; to &lt;code&gt;btrfs&lt;/code&gt;. To be
fair: snapshots are &lt;em&gt;subvolumes with initial content&lt;/em&gt;. The nice thing
about btrfs is the Copy-On-Write (COW) semantics: snapshots do not take
physical space until blocks are overwritten, and only new versions of
overwritten blocks are allocated from free space. This is a lot similar
to KVM/Qemu snapshots when dealing with images in the &lt;code&gt;qcow2&lt;/code&gt; format.
The difference is that you can &lt;em&gt;mount&lt;/em&gt; a &lt;code&gt;btrfs&lt;/code&gt; volume: you get
features designed for virtualization right on the filesystem level! Once
again old technology is applied in a novel way :-)&lt;/p&gt;
&lt;p&gt;I have a &lt;code&gt;btrfs&lt;/code&gt; volume mounted at &lt;code&gt;/mnt/misc&lt;/code&gt;, and a 1GB Debian &#8220;Etch&#8221;
image and a file with some notes about the image:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# ls -l /mnt/misc
-rw-r--r-- 1 root root 1000000000 2008-06-24 20:44 etch-base.img
-rw-r--r-- 1 root root         60 2008-06-24 18:35 etch-base.txt&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now let us create a snapshot named &lt;code&gt;snappy&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# btrfsctl -s snappy /mnt/misc
# ls -l /mnt/misc
-rw-r--r-- 1 root root 1000000000 2008-06-24 20:44 etch-base.img
-rw-r--r-- 1 root root         60 2008-06-24 18:35 etch-base.txt&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Hey! Wait a second! Nothing seems to happen!... This is due to all
subvolumes and snapshots hanging from the filesystem root, and the
&lt;code&gt;default&lt;/code&gt; subvolume is mounted (you guessed it) &lt;em&gt;by default&lt;/em&gt;. Let's
remount another subvolume:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# umount /mnt/misc
# mount -o subvol=snappy /dev/hda1 /mnt/misc
# ls -l /mnt/misc
-rw-r--r-- 1 root root 1000000000 2008-06-24 20:44 etch-base.img
-rw-r--r-- 1 root root         60 2008-06-24 18:35 etch-base.txt&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Nothing impressive... now for the fun part we will add some garbage, and
mount &lt;em&gt;all&lt;/em&gt; the subvolumes at once:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# touch /mnt/misc/hello-btrfs.txt
# echo 'btrfs rocks' &amp;gt;&amp;gt; /mnt/misc/etch-base.txt
# umount /mnt/misc
# mount -o subvol=. /dev/hda1 /mnt/misc
# ls /mnt/misc
default  snappy&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now the mount point shows a directory for each subvolume, and the files
are really there:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# ls /mnt/misc/*
/mnt/misc/default:
etch-base.img  etch-base.txt

/mnt/misc/snappy:
etch-base.img  etch-base.txt  hello-btrfs.txt&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now please run &lt;code&gt;df -h /mnt/misc&lt;/code&gt; by yourself and get surprised: only
about 1GB of physical space is really in use. In fact that can even be
less than 1GB, as &lt;code&gt;btrfs&lt;/code&gt; supports sparse files as well (if there are
&#8220;gaps&#8221; they do not take physical space). Final remark: you can also make
snapshots of snapshots.&lt;/p&gt;</description><author>Adrián Pérez</author><pubDate>2008-06-25T21:42:00.000Z</pubDate></item><item><title>Simple way to manage lots of system users in distributed environments.</title><link>http://ajdiaz.wordpress.com/2011/06/03/simple-way-to-manage-lots-of-system-users-in-distributed-environments/</link><description>&lt;p&gt;Few years ago I was working in design of a large cluster of systems to perform some actions (solving some mathematical models, sharding database&amp;#8230;). From the point of view of the systems, I had to deal with a number of pesky troubles. One of them was the user management.&lt;/p&gt;
&lt;p&gt;Since I had more than one hundred of hosts, and this number could be grow up in short, and I&amp;#8217;ve a number of users which need to access to all hosts, I need to think in a way to easy user management. Actually user management is, in my opinion a pain in the butt. If you ve a central user directory, you need to deal with a big and fat single point of failure, so you need to create some kind of HA service for this directory. And if you ve systems around the world, then you need to replicate the user data in different directories and keep them synchronized. If it is not the hell, it must be very similar.&lt;/p&gt;
&lt;p&gt;Dealing with user managemet is a royal hassle for system administrators in every place, but in the cloud (i.e. a number of hosts distributed around the world), it&amp;#8217;s also a punishment. So, I need to solve (almost in part) this problem before moving forward in my deployment. I do not need a full user management really, just a basic UID mapping and a way to authenticate users (for which I could use the old-and-friendly authorized_keys).&lt;/p&gt;
&lt;p&gt;So, How can I manage a big number of users in a single way, and to be effective in a distributed environment? That&amp;#8217;s not a simple questions, and of course each implementation has its own solution, from authentication services to suites of scripts. Anyway, I was looking for a simple to manage ones, cause of I was the responsible to manage the entire environment and I&amp;#8217;m too lazy too &lt;img alt=";)" class="wp-smiley" src="http://s1.wp.com/wp-includes/images/smilies/icon_wink.gif" /&gt; &lt;/p&gt;
&lt;p&gt;Thinking about the problem, I imagine a system without any user, let&amp;#8217;s imaging that there are just one user, and any other user is just an alias for the first one. It could be easy to manage, because we only need one UID, but we need to solve the alias mapping.&lt;br /&gt;
Here is when &lt;a href="http://github.com/ajdiaz/libnss_map"&gt;libnss_map&lt;/a&gt; join into the game. The &lt;a href="http://github.com/ajdiaz/libnss_map"&gt;libnss_map&lt;/a&gt; is a library designed to be used with &lt;a href="http://www.gnu.org/s/hello/manual/libc/Name-Service-Switch.html"&gt;GNU NSS&lt;/a&gt; service. The &lt;acronym title="Name Service Switch"&gt;NSS&lt;/acronym&gt; allows the system to get user credentials from many sources, which can be configured easy from the &lt;code&gt;/etc/nsswitch.conf&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;For example, we can configure our system in the following way:&lt;/p&gt;
&lt;pre class="brush: plain; light: true; pad-line-numbers: false; title: ; notranslate"&gt;
passwd:      files map
shadow:      files map
group:       files map
&lt;/pre&gt;
&lt;p&gt;So, for each user to get credentials NSS will lookup in standard files first, and then using the &lt;code&gt;map&lt;/code&gt; module (libnss_map).The map module works as the flow diagram shows.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://ajdiaz.files.wordpress.com/2011/05/auth.png"&gt;&lt;img alt="Flow diagram of how get credentials works with libnss_map" class="alignleft size-medium wp-image-260" height="300" src="http://ajdiaz.files.wordpress.com/2011/05/auth.png?w=153&amp;#038;h=300" title="Get credentials flow." width="153" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;As you can see in the diagram there are two major steps in lookup. The first one is the responsible to map an user to a virtual one. The virtual user is static, and it&amp;#8217;s defined in &lt;code&gt;/etc/nssmap.conf&lt;/code&gt;. This file has the same syntax like &lt;code&gt;passwd&lt;/code&gt; does. For example:&lt;/p&gt;
&lt;pre class="brush: plain; light: true; pad-line-numbers: false; title: ; notranslate"&gt;
virtual:x:10000:10000:,,,:/home/:/secure_shell
&lt;/pre&gt;
&lt;p&gt;Which means that any user who does not exists in &lt;code&gt;/etc/passwd&lt;/code&gt; will be mapped into this one, with UID 10000.&lt;/p&gt;
&lt;p&gt;Okay, sounds good, but there are a lot questions yet. What about the password? What about the home dir?&lt;/p&gt;
&lt;p&gt;Well, I do not find a good solution for password, so nssmap will return a masked password (account is enabled, but password will be unpredictable), and I authenticate the user using other methods via &lt;acronym title="Pluggable Authentication Modules"&gt;PAM&lt;/acronym&gt;, or public keys via &lt;acronym title="Secure SHell"&gt;SSH&lt;/acronym&gt;.&lt;/p&gt;
&lt;p&gt;Home directory is easier. The home directory field in the user definition (inside &lt;tt&gt;/etc/nssmap.conf&lt;/tt&gt; file) is used as prefix, and it will be completed with the user name (the name of the user which is intended to login, not the virtual one). So, for example, for the hypothetical user &amp;#8220;sample&amp;#8221;, the effective home directory will be &amp;#8220;/home/sample&amp;#8221;, because &amp;#8220;/home/&amp;#8221; is the prefix. Please note that the end slash is mandatory in current implementation.&lt;/p&gt;
&lt;p&gt;Finally I need to solve another big problem: if two users has the same UID then both can change the same files, or delete the files of other &amp;#8220;virtual&amp;#8221; user. How can we solve it? There are not single answer, not easy afterall. In my case I use special shell, which&lt;br /&gt;
ensure that the user cannot remove, touch or even read files in any path into /home except his own home directory, but it&amp;#8217;s not a full solution yet.&lt;/p&gt;
&lt;p&gt;Here is an example using nss map:&lt;/p&gt;
&lt;pre class="brush: plain; light: true; pad-line-numbers: false; title: ; notranslate"&gt;
host ~ # sudo su - test
No directory, logging in with HOME=/
test@host / $ id
uid=10000(virtual) gid=10000(virtual) groups=10000(virtual)
&lt;/pre&gt;
&lt;p&gt;In the meanwhile, a basic code is available in &lt;a href="http://github.com/ajdiaz/libnss_map"&gt;my github&lt;/a&gt;, and I still researching in this kind of authorization. Keep in touch and enjoy! An of course, feedback is welcome &lt;img alt=":D" class="wp-smiley" src="http://s0.wp.com/wp-includes/images/smilies/icon_biggrin.gif" /&gt; &lt;/p&gt;
&lt;br /&gt;  &lt;img alt="" border="0" height="1" src="http://stats.wordpress.com/b.gif?host=ajdiaz.wordpress.com&amp;#038;blog=630003&amp;#038;post=251&amp;#038;subd=ajdiaz&amp;#038;ref=&amp;#038;feed=1" width="1" /&gt;</description><author>Andrés J. Diaz</author><pubDate>Fri, 03 Jun 2011 20:42:03 +0000</pubDate></item><item><title>Hands on dreamplug</title><link>http://ajdiaz.wordpress.com/2011/05/25/hands-on-dreamplug/</link><description>&lt;p&gt;&lt;img alt="A DreamPlug device" class="alignleft size-thumbnail wp-image-240" height="96" src="http://ajdiaz.files.wordpress.com/2011/05/dreamplug-1-2ghz-arm-pc-in-a-power-outlet1.jpg?w=150&amp;#038;h=96" title="DreamPlug" width="150" /&gt;&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Update:&lt;/strong&gt; Óscar García gently published a similar &lt;a href="http://entropia.moire.org/2011/06/04/primeros-pasos-con-el-dreamplug/"&gt;spanish version&lt;/a&gt; of this article.
&lt;/p&gt;
&lt;p&gt;Couple of weeks ago I received my &lt;a href="http://www.globalscaletechnologies.com/c-5-dreamplugs.aspx"&gt;dreamplug&lt;/a&gt;, from &lt;a href="http://newit.co.uk"&gt;NewIT&lt;/a&gt;. Though I knew some software troubles in device, I remains hopeful. However when I unpacked and powered on the plug I got a number of problems. This is the history about these problems and their solutions. I hope that my experience can be useful for anyone who take the same model and have the same problems. Afterall, the &lt;a href="http://www.newit.co.uk/forum/"&gt;NewIT forum&lt;/a&gt; has a number of posts about these and other problems, so reading it is recommended.&lt;/p&gt;
&lt;p&gt;The first problem that I found was a bad partition table, which is also &lt;a href="http://ajdiaz.wordpress.com/feed/"&gt;a well-known bug in NewIT forums&lt;/a&gt;; and the second one is the &lt;a href="http://www.ubuntu.com"&gt;Ubuntu&lt;/a&gt; installation which is not very tiny by default &lt;img alt=":)" class="wp-smiley" src="http://s0.wp.com/wp-includes/images/smilies/icon_smile.gif" /&gt;  Fortunately, both problems are easy to solve.&lt;/p&gt;
&lt;p&gt;These are the steps that I followed to &amp;#8220;upgrade&amp;#8221; my dreamplug software to a cooler one. Please note that the &lt;a href="http://www.globalscaletechnologies.com/"&gt;Globalscale&lt;/a&gt; guys do not support other system images and installations &lt;acronym title="as far as I know"&gt;AFAIK&lt;/acronym&gt;, so perform this changes under your own responsibility. You are warned!.&lt;br /&gt;
&lt;span id="more-209"&gt;&lt;/span&gt;&lt;br /&gt;
Anyway, that is the recipe:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;STEP ONE: Creating a bootable USB&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The first step in our process is to create a pseudo-bootable USB. The &amp;#8220;pseudo&amp;#8221; prefix is here because we don&amp;#8217;t need really a bootable USB, but a USB storage with the contents of the image inside. We will use the same &lt;tt&gt;uImage&lt;/tt&gt; provided in the original dreamplug or, of course, you can change the kernel image whenever you want.&lt;/p&gt;
&lt;p&gt;For this USB image you can use &lt;a href="http://www.newit.co.uk/rootfs/dreamplug/ex-factory-2011-04-24/"&gt;a factory one&lt;/a&gt;, &lt;a href="http://code.google.com/p/dreamplug/downloads/list"&gt;debian image&lt;/a&gt; provided by Globalscale guys, or &lt;a href="http://www.megaupload.com/?d=R59E1DU3"&gt;my own debian image&lt;/a&gt; (which is my favourite one, of course). You also need to format your USB with ext2, ext3 or ext4 filesystem (the current Dreamplug kernel do not support much filesystems), and then unpack the image into it. It&amp;#8217;s very simple step, for example, if you have &lt;a href="http://code.google.com/p/plowshare/"&gt;plowshare&lt;/a&gt; installed, you can follow these steps:&lt;/p&gt;
&lt;pre class="brush: plain; light: true; pad-line-numbers: false; title: ; notranslate"&gt;
$ plowdown http://www.megaupload.com/?d=R59E1DU3
$ mkfs.ext4 /dev/sdñ # or your USB unit
$ mount -t ext4 /dev/sdñ /mnt
$ tar -xvpzf dantzig-dreamplug-image.tar.gz -C /mnt
$ cp dantzig-dreamplug-image.tar.gz /mnt/root # only required for step 4.
&lt;/pre&gt;
&lt;p&gt;In this example I suppose that device /dev/sdñ exists and it&amp;#8217;s the USB device.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;STEP TWO: Boot from USB&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The next step  is to boot from the USB that we make in the last step. To perform well this step we also need to have attached a &lt;acronym title="Joint Test Action Group"&gt;JTAG&lt;/acronym&gt; unit. Without the JTAG we cannot control the boot process and we cannot force to u-boot to use the USB. The idea is to boot from the factory kernel image, but setting the root filesystem to the USB.&lt;/p&gt;
&lt;p&gt;In other plug models, like &lt;a href="http://www.globalscaletechnologies.com/t-guruplugdetails.aspx"&gt;Guruplug&lt;/a&gt;, you can change the boot environment from the OS, so you do not require the JTAG (if everything works fine), but AFAIK, Dreamplug has u-boot code in a different flash memory which cannot be modified from the OS. If anyone knows a way to do this, please don&amp;#8217;t keep it in secret &lt;img alt=":)" class="wp-smiley" src="http://s0.wp.com/wp-includes/images/smilies/icon_smile.gif" /&gt; &lt;/p&gt;
&lt;p&gt;When system starts in JTAG console you can see the following lines:&lt;/p&gt;
&lt;pre class="brush: plain; light: true; pad-line-numbers: false; title: ; notranslate"&gt;
88E1121 Initialized on egiga1
Hit any key to stop autoboot: 3
&lt;/pre&gt;
&lt;p&gt;Then you can press any key to enter in the u-boot prompt:&lt;/p&gt;
&lt;pre class="brush: plain; light: true; pad-line-numbers: false; title: ; notranslate"&gt;
Marvell&amp;gt;&amp;gt;
&lt;/pre&gt;
&lt;p&gt;Then change the environment to point the root filesystem to the USB:&lt;/p&gt;
&lt;pre class="brush: plain; light: true; pad-line-numbers: false; title: ; notranslate"&gt;
Marvell&amp;gt;&amp;gt; setenv x_bootargs_root root=/dev/sdc1 rootdelay=15
Marvell&amp;gt;&amp;gt; boot
&lt;/pre&gt;
&lt;p&gt;The &lt;tt&gt;rootdelay&lt;/tt&gt; paramenter is required to wait while the USB bus is initializing after kernel loading. While kernel bus scan is asynchronous, you need to wait until the USB one starts successfully. You cannot control this time and it&amp;#8217;s depends on many factor, but usually a 15 sec value is time enough.&lt;/p&gt;
&lt;p&gt;Please note that we never commit the changes into the environment, we boot the kernel with the new one, but not save this environment because we do not need to start from the USB anymore.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;STEP THREE: Rebuilding partitions.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Once the system start (will take ~30s), you can login with the root password. The password depends on the image that you use in first step, but the password &lt;tt&gt;nosoup4u&lt;/tt&gt; is default one for my image and for factory ones too.&lt;/p&gt;
&lt;p&gt;Once you get a prompt, is time to take a look into partition table:&lt;/p&gt;
&lt;pre class="brush: plain; light: true; pad-line-numbers: false; title: ; notranslate"&gt;
# fdisk -l /dev/sda
Disk /dev/sda: 1967 MB, 1967128576 bytes
61 heads, 62 sectors/track, 1015 cylinders
Units = cylinders of 3782 * 512 = 1936384 bytes
Disk identifier: 0xabcdef

   Device Boot      Start         End      Blocks   Id  System
/dev/sdb1               1        1016     1920993+   6  FAT16
Partition 1 has different physical/logical endings:
     phys=(54, 61, 61) logical=(1015, 54, 24)
/dev/sdb2              56        1021     1826706   83  Linux
&lt;/pre&gt;
&lt;p&gt;As you can see we&amp;#8217;ve a problem with partitions. The first one is a FAT16 partition, which store the kernel in &lt;tt&gt;uImage&lt;/tt&gt; format, which is loaded by u-boot when booting, but as you see in the previously output, the size is not correct. The partition (as documentation said) might have a size of 16M, that is 55 cylinders, so we need to remove the partition and create a new one:&lt;/p&gt;
&lt;pre class="brush: plain; light: true; pad-line-numbers: false; title: ; notranslate"&gt;
# fdisk /dev/sda
Command (m for help): d
Partition number (1-4): 1
Command (m for help): n
Command action
   e   extended
   p   primary partition (1-4)
p
Partition number (1-4): 1
First cylinder (1-1015, default 1): 1
Last cylinder, +cylinders or +size{K,M,G} (1-55, default 55): 55

Command (m for help): t
Partition number (1-4): 1
Hex code (type L to list codes): 6
Changed system type of partition 1 to 6 (FAT16)

Command (m for help): w
The partition table has been altered!

Syncing disks.
&lt;/pre&gt;
&lt;p&gt;Now the first partition has the correct size, but unfortunately, the second partition is incorrect too. It starts at cylinder 56, which is correct, but ends beyond the end of disk. We need to correct the size of this partition too, in the same way as we do in the last step:&lt;/p&gt;
&lt;pre class="brush: plain; light: true; pad-line-numbers: false; title: ; notranslate"&gt;
# fdisk /dev/sda
Command (m for help): d
Partition number (1-4): 2
Command (m for help): n
Command action
   e   extended
   p   primary partition (1-4)
p
Partition number (1-4): 2
First cylinder (56-1015, default 56): [enter]
Using default value 56
Last cylinder, +cylinders or +size{K,M,G} (56-1015, default 1015): [enter]
Using default value 1015

Command (m for help): w
The partition table has been altered!

Syncing disks.
&lt;/pre&gt;
&lt;p&gt;And that&amp;#8217;s all. At this point we have the correct partition size in both partitions, and the system might work fine. We only need to reboot the system, sacrify a goat and pray. But maybe you want to delete Ubuntu and install other distribution, let&amp;#8217;s say Debian or even better Gentoo. As my boot image is Debian based, it&amp;#8217;s easy to delete Ubuntu and install Debian Squeeze (which is the image base)&amp;#8230;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;STEP FOUR: Debianize&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you remember the step one, we also copied the &lt;tt&gt;dantzig-dreamplug-image.tar.gz&lt;/tt&gt; image into &lt;tt&gt;/root&lt;/tt&gt;. Now we will use this targz to unpack it into sdb disk.&lt;/p&gt;
&lt;p&gt;Let&amp;#8217;s suppose that you are booting from USB image and login the system and get a root console (steps 1,2),then:&lt;/p&gt;
&lt;pre class="brush: plain; light: true; pad-line-numbers: false; title: ; notranslate"&gt;
# umount /dev/sda2 # Puesto que ha sido montado automáticamente por usbmount
# mkfs.ext4 /dev/sda2 # Formateamos con ext4
# e2label /dev/sda2 root # Etiquetamos la partición como root (opcional)
# mount -t ext4 /dev/sda2 /mnt
# tar xvzpf /dreamplug_debian_v0.2.tar.gz -C /mnt
# sync &amp;amp;&amp;amp; sync &amp;amp;&amp;amp; sync
# umount /mnt
&lt;/pre&gt;
&lt;p&gt;At that point we must have a Debian distro installed in sdb2, and in next reboot the new system will be booted.&lt;/p&gt;
&lt;p&gt;Maybe you need to know a bit more about &lt;a href="http://www.megaupload.com/?d=R59E1DU3"&gt;dantzig-dreamplug-image.tar.gz&lt;/a&gt;. This is the image which I created to my plugs (dreamplug and guruplug) and it works in production for &lt;a href="http://connectical.com"&gt;connectical.com&lt;/a&gt; site for months. This image uses &lt;a href="http://smarden.org/runit/"&gt;runit&lt;/a&gt; as init process and a lot of features and geek services &lt;img alt=":)" class="wp-smiley" src="http://s0.wp.com/wp-includes/images/smilies/icon_smile.gif" /&gt; &lt;/p&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;
&lt;br /&gt;  &lt;img alt="" border="0" height="1" src="http://stats.wordpress.com/b.gif?host=ajdiaz.wordpress.com&amp;#038;blog=630003&amp;#038;post=209&amp;#038;subd=ajdiaz&amp;#038;ref=&amp;#038;feed=1" width="1" /&gt;</description><author>Andrés J. Diaz</author><pubDate>Wed, 25 May 2011 19:29:49 +0000</pubDate></item><item><title>New dtools and a bit more</title><link>http://ajdiaz.wordpress.com/2011/04/03/new-dtools-and-a-bit-more/</link><description>&lt;p&gt;Last week was crazy. I published a new release of &lt;a href="http://ajdiaz.github.com/dtools"&gt;dtools&lt;/a&gt;, the 4.2, a new web site for the dtools project and a couple of patches for version 5.0 of &lt;a href="http://collectd.org"&gt;collectd&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In the last months, dtools becomes in an useful tool for me. I use dtools everyday for system administration in large distributed networks. So I decided to improve some functionalities and also test and retest current features, so in a couple of months I expect to launch a new release of dtools.&lt;/p&gt;
&lt;p&gt;In the meantime, I still working in &lt;a href="http://github.com/ajdiaz/whistler"&gt;whistler&lt;/a&gt;, a XMPP bot for MUC rooms, I hope that &lt;a href="https://github.com/fritzy/SleekXMPP"&gt;SleekXMPP&lt;/a&gt; library, which is the XMPP engine used by whistler become to release early. At that point we must remove any dependency with the old xmpppy in the code and we will ready to release the version 2.0 of whistler.&lt;/p&gt;
&lt;br /&gt;  &lt;img alt="" border="0" height="1" src="http://stats.wordpress.com/b.gif?host=ajdiaz.wordpress.com&amp;#038;blog=630003&amp;#038;post=193&amp;#038;subd=ajdiaz&amp;#038;ref=&amp;#038;feed=1" width="1" /&gt;</description><author>Andrés J. Diaz</author><pubDate>Sun, 03 Apr 2011 18:24:00 +0000</pubDate></item><item><title>Integer conversions in bash</title><link>http://ajdiaz.wordpress.com/2010/12/20/integer-conversions-in-bash/</link><description>&lt;p&gt;Since version 2, bash support a single aritmethic operations. Altough bash is not a mathematical shell (use &lt;tt&gt;bc&lt;/tt&gt; instead), you can perform certain conversions using the bash arithmetic logic.&lt;/p&gt;
&lt;p&gt;For example you can remove the left zeroes in a decimal number without require any external utility or print formats, let&amp;#8217;s suppose that you want to strip zeroes from the number 007, which is stored in bond variable.&lt;/p&gt;
&lt;pre class="brush: bash; light: true; pad-line-numbers: false; title: ; notranslate"&gt;
$ echo $bond
007
$ let nozeros=10#$bond
$ echo $nozeros
7
&lt;/pre&gt;
&lt;p&gt;In many forums and mailing list, people need to use ugly sed expressions, or awk invokation, but (with bash) it&amp;#8217;s just simply &lt;img alt=":)" class="wp-smiley" src="http://s0.wp.com/wp-includes/images/smilies/icon_smile.gif" /&gt; &lt;/p&gt;
&lt;p&gt;Using the same trick, you can perform a base conversions, for example:&lt;/p&gt;
&lt;pre class="brush: bash; light: true; pad-line-numbers: false; title: ; notranslate"&gt;
$ let i=0x10
$ echo $i
16
$ let i=2#10000
$ echo $i
16
&lt;/pre&gt;
&lt;p&gt;Or create an easy number checking:&lt;/p&gt;
&lt;pre class="brush: bash; light: true; pad-line-numbers: false; title: ; notranslate"&gt;
$ is_decimal () { let i=10#$1 2&amp;gt;/dev/null; }
$ is_decimal 'a' || echo Nop
Nop
$ is_decimal 56 &amp;amp;&amp;amp; echo 'Yep'
Yep
&lt;/pre&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;
&lt;br /&gt;  &lt;img alt="" border="0" height="1" src="http://stats.wordpress.com/b.gif?host=ajdiaz.wordpress.com&amp;#038;blog=630003&amp;#038;post=156&amp;#038;subd=ajdiaz&amp;#038;ref=&amp;#038;feed=1" width="1" /&gt;</description><author>Andrés J. Diaz</author><pubDate>Mon, 20 Dec 2010 19:18:50 +0000</pubDate></item><item><title>Whistler: a new Jabber MUC bot.</title><link>http://ajdiaz.wordpress.com/2010/11/01/whistler-a-new-jabber-muc-bot/</link><description>&lt;p&gt;Few days ago, I start a new project called whistler. Whistler is a bot written in python using the greatest &lt;a href="http://xmpppy.sourceforge.net/"&gt;xmppy&lt;/a&gt; library, designed to work in XMPP networks (like &lt;a href="http://jabber.org"&gt;jabber&lt;/a&gt; or &lt;a href="http://google.com/talk"&gt;GTalk&lt;/a&gt;. In first time I tried to use the &lt;a href="http://pypi.python.org/pypi/quinoa/0.3.1"&gt;quinoa&lt;/a&gt; framework, and it is very usefull, but have some issues for me, for example you cannot set another server configuration, which is a problem for GTalk accounts. So, after tried a number of frameworks, I decided to create my own one. Probably not the best, but mine &lt;img alt=":)" class="wp-smiley" src="http://s0.wp.com/wp-includes/images/smilies/icon_smile.gif" /&gt; &lt;/p&gt;
&lt;p&gt;Whistler is intended to manage the &lt;a href="http://connectical.com"&gt;connectical&lt;/a&gt; MUC room, and only basic functionalities are provided. Obviously it is under heavy development yet.&lt;/p&gt;
&lt;p&gt;The code is publicy available on &lt;a href="http://github.com/ajdiaz/whistler"&gt;github whistler repository&lt;/a&gt;, and you can clone as usually:&lt;/p&gt;
&lt;pre class="brush: bash; light: true; pad-line-numbers: false; title: ; notranslate"&gt;
$ git clone git://github.com/ajdiaz/whistler
&lt;/pre&gt;
&lt;p&gt;You require xmppy to work with whistler and python &amp;gt;= 2.5. In few days I will publish the projecti into &lt;a href="http://pypi.python.org"&gt;pypi&lt;/a&gt; too.&lt;/p&gt;
&lt;p&gt;Enjoy and remember, any feedback is welcome &lt;img alt=";)" class="wp-smiley" src="http://s1.wp.com/wp-includes/images/smilies/icon_wink.gif" /&gt; &lt;/p&gt;
&lt;br /&gt;  &lt;img alt="" border="0" height="1" src="http://stats.wordpress.com/b.gif?host=ajdiaz.wordpress.com&amp;#038;blog=630003&amp;#038;post=148&amp;#038;subd=ajdiaz&amp;#038;ref=&amp;#038;feed=1" width="1" /&gt;</description><author>Andrés J. Diaz</author><pubDate>Mon, 01 Nov 2010 15:54:59 +0000</pubDate></item><item><title>My exheres repository</title><link>http://ajdiaz.wordpress.com/2010/08/11/my-exheres-repository/</link><description>&lt;p&gt;A couple of months ago, I reinstall my PC with &lt;a href="http://exherbo.org"&gt;exherbo&lt;/a&gt; and now I can say that I&amp;#8217;m a happy user (well, a happy &amp;#8220;developer&amp;#8221; since Exherbo do not have users). So, I decided to port a number of ebuild than I use frequently to &lt;a href="http://exherbo.org/docs/exheres-for-smarties.html"&gt;exheres&lt;/a&gt;, and create my own exheres repository in github, called &lt;a href="http://github.com/ajdiaz/ajdiaz-exheres"&gt;ajdiaz-exheres&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Now I will try to  include my repo in unavailable-unofficial list&amp;#8230; In the meanwhile, here is the configuration that you need for paludis:&lt;/p&gt;
&lt;p&gt;location = ${ROOT}/var/db/paludis/repositories/ajdiaz-exheres&lt;br /&gt;
sync = git://github.com/ajdiaz/ajdiaz-exheres&lt;br /&gt;
format = e&lt;/p&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;
&lt;br /&gt;  &lt;img alt="" border="0" height="1" src="http://stats.wordpress.com/b.gif?host=ajdiaz.wordpress.com&amp;#038;blog=630003&amp;#038;post=134&amp;#038;subd=ajdiaz&amp;#038;ref=&amp;#038;feed=1" width="1" /&gt;</description><author>Andrés J. Diaz</author><pubDate>Wed, 11 Aug 2010 19:05:48 +0000</pubDate></item><item><title>Update dot files with git</title><link>http://ajdiaz.wordpress.com/2010/06/12/update-dot-files-with-git/</link><description>&lt;p&gt;For a years I was using a custom created scripts to keep my dot files updated. I had a local repository in &lt;a href="http://bazaar.canonical.com/en/"&gt;bazaar&lt;/a&gt; and a script which check differences between home dot files and files stored in the repository. This solutions works fine for years, but now I want to do some changes&amp;#8230;&lt;/p&gt;
&lt;p&gt;The first one is moving my dot files to git (and probably pushed them to github), and the second one is to create a hook for git to update my dot files. I known that there are a lot of similar solutions, one more complex, other more easy, but this is mine &lt;img alt=":)" class="wp-smiley" src="http://s0.wp.com/wp-includes/images/smilies/icon_smile.gif" /&gt; &lt;/p&gt;
&lt;p&gt;So, &lt;a href="http://2tu.us/2scm"&gt;I created a post-commit hook script&lt;/a&gt; for git, which perform the modifications that I need. Now I just only do this steps:&lt;/p&gt;
&lt;h3&gt;1. Create a new git repo:&lt;/h3&gt;
&lt;pre class="brush: bash; light: true; pad-line-numbers: false; title: ; notranslate"&gt;
mkdir mydots_repo
cd my_dots_repo &amp;amp;amp;&amp;amp;amp; git init
&lt;/pre&gt;
&lt;h3&gt;2. Put the hook:&lt;/h3&gt;
&lt;pre class="brush: bash; light: true; pad-line-numbers: false; title: ; notranslate"&gt;
wget -O .git/hooks/post-commit  http://2tu.us/2scm 
chmod 755 .git/hooks/post-commit
&lt;/pre&gt;
&lt;h3&gt;3. Copy old files:&lt;/h3&gt;
&lt;pre class="brush: bash; light: true; pad-line-numbers: false; title: ; notranslate"&gt;
cp ~/old/bzr_repo/* .
git add *
 &lt;/pre&gt;
&lt;h3&gt;4. Commit and recreate links:&lt;/h3&gt;
&lt;pre class="brush: bash; light: true; pad-line-numbers: false; title: ; notranslate"&gt;
git commit -a -m'initial import'
&lt;/pre&gt;
&lt;p&gt;And it&amp;#8217;s works &lt;img alt=":)" class="wp-smiley" src="http://s0.wp.com/wp-includes/images/smilies/icon_smile.gif" /&gt; &lt;/p&gt;
&lt;br /&gt;  &lt;img alt="" border="0" height="1" src="http://stats.wordpress.com/b.gif?host=ajdiaz.wordpress.com&amp;#038;blog=630003&amp;#038;post=110&amp;#038;subd=ajdiaz&amp;#038;ref=&amp;#038;feed=1" width="1" /&gt;</description><author>Andrés J. Diaz</author><pubDate>Sat, 12 Jun 2010 15:17:35 +0000</pubDate></item><item><title>Moving to github</title><link>http://ajdiaz.wordpress.com/2010/05/11/moving-to-github/</link><description>&lt;p&gt;Since one week ago, we are moving the &lt;a href="http://connectical.com"&gt;Connectical&lt;/a&gt; servers from old location in &lt;a href="http://virpus.com"&gt;Virpus&lt;/a&gt; datacenter on Texas to our own managed infraestructure, build on the top of a &lt;a href="http://www.globalscaletechnologies.com/p-32-guruplug-server-plus.aspx"&gt;GuruPlugs&lt;/a&gt; cluster.&lt;/p&gt;
&lt;p&gt;We are discussing now about how distribute the infraestructure and how to keep a number of copies in remote locations up-to-date, we are exploring solutions like &lt;a href="http://ioremap.net/projects/elliptics"&gt;elliptics&lt;/a&gt; or some similar.&lt;/p&gt;
&lt;p&gt;In the meanwhile I created &lt;a href="http://github.com/ajdiaz"&gt;my github account&lt;/a&gt; to still my projects under development, and also to have a backup of some projects that I really use everyday.&lt;/p&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;
&lt;br /&gt;  &lt;img alt="" border="0" height="1" src="http://stats.wordpress.com/b.gif?host=ajdiaz.wordpress.com&amp;#038;blog=630003&amp;#038;post=104&amp;#038;subd=ajdiaz&amp;#038;ref=&amp;#038;feed=1" width="1" /&gt;</description><author>Andrés J. Diaz</author><pubDate>Tue, 11 May 2010 06:34:10 +0000</pubDate></item><item><title>New version of dtools</title><link>http://ajdiaz.wordpress.com/2010/03/07/new-version-of-dtools/</link><description>&lt;p&gt;Today I was released a new version of &lt;a href="http://connectical.com/projects/dtools"&gt;dtools&lt;/a&gt;. Distributed tools, aka dtools is a project written in bash coding to create a suite of programs to allow running different UNIX comamnds parallelly in a list of tagged hosts.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Features&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fully written in bash, no third party software required (except ssh, obviously).&lt;/li&gt;
&lt;li&gt;Based in module architecture, easy to extend.&lt;/li&gt;
&lt;li&gt;Full integration with ssh.&lt;/li&gt;
&lt;li&gt;Easy to group hosts by tags or search by regular expression.&lt;/li&gt;
&lt;li&gt;Manage of ssh hosts&lt;/li&gt;
&lt;li&gt;Parseable output, but human-readable&lt;/li&gt;
&lt;li&gt;Thinking in system admin, no special development skills required to extend the software.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Short Example&lt;/em&gt;&lt;/p&gt;
&lt;pre class="brush: bash; light: true; pad-line-numbers: false; title: ; notranslate"&gt;
$ dt tag:linux ssh date
okay::dt:ssh:myhostlinux1.domain:Mon Nov 16 23:54:04 CET 2009
okay::dt:ssh:myhostlinux3.domain:Mon Nov 16 23:54:04 CET 2009
okay::dt:ssh:myhostlinux2.domain:Mon Nov 16 23:54:04 CET 2009
&lt;/pre&gt;
&lt;p&gt;As usual, you can download the code from the &lt;a href="http://connectical.com/projects/dtools"&gt;project page&lt;/a&gt;, or if you wish you can download the code via git:&lt;/p&gt;
&lt;pre class="brush: bash; light: true; pad-line-numbers: false; title: ; notranslate"&gt;
git clone git://git.connectical.com/ajdiaz/dtools
&lt;/pre&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;
&lt;br /&gt;  &lt;img alt="" border="0" height="1" src="http://stats.wordpress.com/b.gif?host=ajdiaz.wordpress.com&amp;#038;blog=630003&amp;#038;post=96&amp;#038;subd=ajdiaz&amp;#038;ref=&amp;#038;feed=1" width="1" /&gt;</description><author>Andrés J. Diaz</author><pubDate>Sun, 07 Mar 2010 19:17:49 +0000</pubDate></item><item><title>New htop color scheme</title><link>http://ajdiaz.wordpress.com/2010/02/16/new-htop-color-scheme/</link><description>&lt;p&gt;From a couple of weeks I use &lt;a href="http://htop.sourceforge.net/"&gt;htop&lt;/a&gt; in my work to get a fast view about the system status, htop is an an interactive process viewer for Linux, similar to classic UNIX top, but with some enhancements, for example a more configurable view, the integration with &lt;code&gt;strace&lt;/code&gt; and &lt;code&gt;lsof&lt;/code&gt; programs and much more.&lt;/p&gt;
&lt;p&gt;But (and it&amp;#8217;s a big &amp;#8220;but&amp;#8221; for me) I really dislike the color scheme that use by default. htop comming with five color schemes, but I cannot find any beautifull one (from my personal point of view, of course), so I decided to make a new schema. I called &amp;#8220;blueweb&amp;#8221; theme (dont&amp;#8217; ask) &lt;img alt=";)" class="wp-smiley" src="http://s1.wp.com/wp-includes/images/smilies/icon_wink.gif" /&gt; . And here is the result:&lt;/p&gt;
&lt;div class="wp-caption alignnone" id="attachment_91" style="width: 310px;"&gt;&lt;a href="http://ajdiaz.files.wordpress.com/2010/02/htop.png"&gt;&lt;img alt="htop with blueweb theme" class="size-medium wp-image-91" height="126" src="http://ajdiaz.files.wordpress.com/2010/02/htop.png?w=300&amp;#038;h=126" title="blueweb" width="300" /&gt;&lt;/a&gt;&lt;p class="wp-caption-text"&gt;htop with blueweb theme&lt;/p&gt;&lt;/div&gt;
&lt;p&gt;You can &lt;a href="https://gist.github.com/raw/798935/3206d57731877798cc0e335df80e39c723529e89/htop-blueweb-theme.patch"&gt;download the patch file&lt;/a&gt; for the htop source code. And yes, unfortunately you need to patch the code. &lt;/p&gt;
&lt;p&gt;Now my htop looks nice &lt;img alt=":)" class="wp-smiley" src="http://s0.wp.com/wp-includes/images/smilies/icon_smile.gif" /&gt; &lt;/p&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;
&lt;br /&gt;  &lt;img alt="" border="0" height="1" src="http://stats.wordpress.com/b.gif?host=ajdiaz.wordpress.com&amp;#038;blog=630003&amp;#038;post=90&amp;#038;subd=ajdiaz&amp;#038;ref=&amp;#038;feed=1" width="1" /&gt;</description><author>Andrés J. Diaz</author><pubDate>Tue, 16 Feb 2010 19:17:37 +0000</pubDate></item><item><title>Cortilandia from Óscar García Amor on Vimeo.Cortilandia de...</title><link>http://ogarcia.connectical.com/post/49185917334</link><description>&lt;br /&gt;&lt;br /&gt;&lt;p&gt;&lt;a href="http://vimeo.com/65057843"&gt;Cortilandia from &lt;/a&gt;&lt;a href="http://vimeo.com/ogarcia"&gt;Óscar García Amor&lt;/a&gt; on &lt;a href="http://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;blockquote&gt;&lt;p class="first"&gt;Cortilandia de preciados en Madrid (Navidades 2012/2013)&lt;/p&gt;&lt;/blockquote&gt;</description><author>Óscar García</author><pubDate>Mon, 29 Apr 2013 18:46:39 +0200</pubDate></item><item><title>DD-WRT &amp; IPv6</title><link>http://ogarcia.connectical.com/post/33491123242</link><description>&lt;p&gt;I recently purchased a &lt;a href="http://homesupport.cisco.com/es-eu/support/routers/WRT610N" target="_blank" title="Linksys WRT610N"&gt;WRT610N&lt;/a&gt; router to replace my old &lt;a href="http://homesupport.cisco.com/es-eu/support/routers/WRT54GL" target="_blank" title="Linksys WRT54GL"&gt;WRT54GL&lt;/a&gt;. The main reasons for the change have been that the second (despite being one of the most versatile routers) falls a bit short in terms of network speed and memory, the first being a «dark beast» with its dual WiFi circuitry, which allows two real wireless networks that can operate at different speeds (which is very useful, because computers nowadays tend to work in standard N, but the phones are still stuck in G), its gigabit wired network and the USB port, to connect a storage device to extend the capabilities of the product.&lt;/p&gt;
&lt;p&gt;Another reason why I decided to update my network hardware was that I wanted to try to work with IPv6.&lt;/p&gt;
&lt;p&gt;Today my &lt;a href="http://mundo-r.com/" target="_blank" title="R"&gt;ISP&lt;/a&gt; offers no possibility of using IPv6 (like most), but that does not mean that we can not use the tunnel services that facilitate third-party companies, such as &lt;a href="http://www.he.net/" target="_blank" title="Hurricane Electric Internet Services"&gt;Hurricane Electric&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In my case the first thing I did was &lt;a href="http://www.tunnelbroker.net/" target="_blank" title="Hurricane Electric Tunnel Broker"&gt;ask a tunnel&lt;/a&gt; with them, you have to be aware that when they checked the tunnel ask our public IP through a Ping to see if it is reachable, so we must have enabled ICMP response .&lt;/p&gt;
&lt;p&gt;Once we get the tunnel (can request up to 5, but one is enough, in the /64 that we have given 18,446,744,073,709,551,616 possible directions) they provide the information necessary to configure it. What really interests us is the server IPv4 address, the IPv6 address and prefix IPv6 routing.&lt;/p&gt;
&lt;p&gt;From here turn configure the router. I already had prepared with &lt;a href="http://www.dd-wrt.com/" target="_blank" title="DD-WRT, Linux based OpenSource firmware"&gt;dd-wrt firmware&lt;/a&gt;. To no internal memory will exhaust I connect a 1GB USB flash drive which I was at home and use it as /jffs, so that all the scripts and big configurations get into this location.&lt;/p&gt;
&lt;p&gt;To up the IPv6 network I use this script that I called hetunnelbroker.sh:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;#! /bin/sh -x

# Load Module
insmod ipv6
insmod sit
sleep 5

# Get WAN IP
WANIP="$(ip -4 addr show dev vlan2 | awk '/inet / {print $2}' | cut -d/ -f1)"

# Configure HE Tunnelbroker
SERVER_IPV4_ADDR="209.51.181.2"
CLIENT_IPV6_ADDR="2001:470:bebe:cafe::2/64"
ROUTED_IPV6_ADDR="2001:470:bebe:cafe::/64"

# Write small log
echo "External IP: $WANIP" &amp;gt; /jffs/ipv6/startup.log

# Configure Tunnel if WAN is UP
if [ -n "$WANIP" ]
then

	echo "Configuring tunnel" &amp;gt;&amp;gt; /jffs/ipv6/startup.log

	# Set Public IP in HE Servers (if the user gives the passwd via stdin)
	[ -n "$1" ] &amp;amp;&amp;amp; [ -n "$2" ] &amp;amp;&amp;amp; [ -n "$3" ] &amp;amp;&amp;amp; \
	echo "Updating tunnel" &amp;gt;&amp;gt; /jffs/ipv6/startup.log &amp;amp;&amp;amp; \
	iptables -I INPUT 1 -p ICMP --icmp-type echo-request -s 66.220.2.74 -j ACCEPT &amp;amp;&amp;amp; \
	MD5PASS=`echo -n $2 | md5sum | sed -e 's/  -//g'` &amp;amp;&amp;amp; \
	wget 'http://ipv4.tunnelbroker.net/ipv4_end.php?ip='$WANIP'&amp;amp;pass='$MD5PASS'&amp;amp;apikey='$1'&amp;amp;tid='$3 -O - &amp;gt;&amp;gt; \
		/jffs/ipv6/startup.log &amp;amp;&amp;amp; \
	iptables -D INPUT 1

	# Add HE tunnel
	ip tunnel add he-ipv6 mode sit remote $SERVER_IPV4_ADDR local $WANIP ttl 255
	ip link set he-ipv6 up
	ip addr add $CLIENT_IPV6_ADDR dev he-ipv6
	ip route add ::/0 dev he-ipv6 metric 1
	ip -6 addr add $ROUTED_IPV6_ADDR dev br0

	# Provide IPv6 Forwarding
	echo 1 &amp;gt; /proc/sys/net/ipv6/conf/all/forwarding

	# Start radvd to provide IPv6 pull to network
	echo -e "\nStarting radvd" &amp;gt;&amp;gt; /jffs/ipv6/startup.log
	radvd -C /jffs/ipv6/radvd.conf
fi&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;The operation of the script is simple, the first thing it does is load the modules needed to support IPv6. After it stored in the variable &lt;em&gt;WAN_IP&lt;/em&gt; our IPv4 collecting it from the network interface that is connected to the Internet. Keep in mind that in my case this interface vlan2, but depending on the model of router you have this may vary.&lt;/p&gt;
&lt;p&gt;From this point begins the configuration that will be personal in each case. In &lt;em&gt;SERVER_IPV4_ADDR&lt;/em&gt; we will put the server IPv4 address that provides us Hurricane Electric, in &lt;em&gt;CLIENT_IPV6_ADDR&lt;/em&gt; the client IPv6 address and in &lt;em&gt;ROUTED_IPV6_ADDR&lt;/em&gt; the IPv6 routing prefix.&lt;/p&gt;
&lt;p&gt;The following are the commands needed to up IPv6, the script writes a small log in /jffs/ipv6/startup.log. We can also see that it is able to pick up three variables of the input line. These variables are the API Key (shown as User ID in our start page of Hurricane Electric Tunnel Broker), our password and ID of the tunnel. If we call the script passing these values, we be able to upgrade our public IP Hurricane Electric, so if it changed, the tunnel will remain active.&lt;/p&gt;
&lt;p&gt;Finally the script ups &lt;em&gt;radvd&lt;/em&gt; (a service that advertise the network IPv6 prefix settings that should be used) reading settings from /jffs/ipv6/radvd.conf:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;interface br0 {
	MinRtrAdvInterval 3;
	MaxRtrAdvInterval 10;
	AdvLinkMTU 1480;
	AdvSendAdvert on;
	prefix 2001:470:bebe:cafe::/64 {
		AdvOnLink on;
		AdvAutonomous on;
		AdvValidLifetime 86400;
		AdvPreferredLifetime 86400;
	};
};&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;Here, all you need is to set the &lt;em&gt;prefix&lt;/em&gt; to match with our IPv6 routing prefix.&lt;/p&gt;
&lt;p&gt;To make this all work just have to call the script hetunnelbroker.sh from the list of router startup commands. As said before if we call it without arguments simply ups the tunnel, but if we pass arguments then it update our IP. We can use one way or another depending on if our IP is static or dynamic.&lt;/p&gt;
&lt;p&gt;Once up the router, we should have available IPv6. To verify, we can try to reach this same page via IPv6 in &lt;a href="http://ipv6.ogarcia.moire.org" target="_blank" title="Entropy vía IPv6"&gt;ipv6.ogarcia.moire.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;IPv6 &amp;amp; Windows 7.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Although, once you have everything set up, works fine on Windows 7, in the machine that I have as game console I don&amp;#8217;t like the default behavior that has this &lt;em&gt;«Operating System»&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Micro$soft, true to its principles, is passed through the &amp;#8230; (wear what you want) the standards defined for IPv6 settings and instead of using an IP-based Ethernet MAC uses a random number based on a generated. While this may be interesting &lt;em&gt;for privacy&lt;/em&gt;, is a hell when we are using local DNS.&lt;/p&gt;
&lt;p&gt;If you want to disable this «feature», we can do this by running the following commands in a &lt;em&gt;cmd&lt;/em&gt; console:&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;netsh interface ipv6 set privacy state=disabled store=active
netsh interface ipv6 set privacy state=disabled store=persistent
netsh interface ipv6 set global randomizeidentifiers=disabled store=active
netsh interface ipv6 set global randomizeidentifiers=disabled store=persistent&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;Once done, reboot the machine and see that the interface is configured correctly using EUI-64.&lt;/p&gt;
&lt;p&gt;Finally, if you want to know a little more about these standards addressing you can read &lt;a href="http://technet.microsoft.com/en-en/library/cc736439%28WS.10%29.aspx" target="_blank" title="IPv6 interface identifiers"&gt;read this article&lt;/a&gt; that, curiously, I found in the Micro$oft TechNet.&lt;/p&gt;</description><author>Óscar García</author><pubDate>Sat, 13 Oct 2012 14:48:00 +0200</pubDate></item><item><title>Sending files through ICMP</title><link>http://vidimensional.wordpress.com/2013/06/21/sending-files-through-icmp/</link><description>&lt;blockquote&gt;&lt;p&gt;DISCLAIMER: English isn&amp;#8217;t my mother tongue so it&amp;#8217;s possible that you&amp;#8217;ll find some grammatical mistakes on the text, feel free to point them out on the comments so I could learn and improve. Thanks.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Today I want to talk about a technique that I heard on latest &lt;a href="http://www.noconname.org/" target="_blank"&gt;No cON Name&lt;/a&gt; by &lt;a href="https://twitter.com/tr1ana" target="_blank"&gt;Juan Garrido&lt;/a&gt; and &lt;a href="https://twitter.com/p_laguna" target="_blank"&gt;Pedro Laguna&lt;/a&gt;, both guys did a presentation about data exfiltration, that&amp;#8217;s it: an unauthorized release of data from within a computer system, and one of the methods they explain for exfiltrate data was the ICMP tunneling.&lt;/p&gt;
&lt;p&gt;Nowadays network administrators are aware of the security problems of anyone inside the network with the permissions to reach arbitrary ports outside the network, so they use firewalls that could block unauthorized connections and proxies that can inspect and log the authorized ones in order to seek for malicious activities. And that is true mainly for any TCP and UDP connections, but network administrators tend to underestimate other protocols less designed to transport arbitrary data as, for example ICMP. What harm could made an user pinging his own server? Well, let&amp;#8217;s take a look and maybe you&amp;#8217;ll get a surprise.&lt;/p&gt;
&lt;p&gt;The ICMP is a layer 4 (transport) protocol designed to troubleshoot and debug computer networks, for example a router will respond an ICMP net unreachable message (type 3 code 0) if receives a packet with an IP destination address that isn&amp;#8217;t on its routing table, another example could be the ICMP redirect message (type 5) that is sent by a router indicating the networks hosts that it is no longer the default gateway and that those hosts have to update their routing tables.&lt;/p&gt;
&lt;p&gt;The most known ICMP messages are ICMP echo request and ICMP echo reply messages, used by the ping (Packet INternet Groper) application. The main usage of ping is to troubleshoot networking issues determining if the problems occur above or below the network layer, basically ping sends an ICMP echo request to a host and, if that host is configured to respond ICMP echoes, it will respond with an ICMP echo reply, this way you could determine if the layers below IP are working properly, sending a burst of them you could check how many packets gets lost on the path, measuring the time between you send an echo request and you receive an echo reply you could determine the latency of that link, and so on. Because of that troubleshooting versatility most networks administrators allow the pass of these packets.&lt;/p&gt;
&lt;p&gt;An ICMP echo request &amp;amp; reply packets looks like:&lt;/p&gt;
&lt;pre&gt; 0                   1                   2                   3
 0 1 2 3 4 5 6 7|8 9 0 1 2 3 4 5|6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|     Type      |     Code      |          Checksum             |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|           Identifier          |        Sequence Number        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|     Data ...
+-+-+-+-+-&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Type field tells us what type of ICMP packet (obviously, duh), in our case we&amp;#8217;re only interested on 8 (echo request) and 0 (echo reply).&lt;/li&gt;
&lt;li&gt;Code field is used to determine subtypes of ICMP packets, in the echo request &amp;amp; reply types there aren&amp;#8217;t any subtype (but you can find on, for example, type 3 -Destination unreachable- the codes 0 -destination network unreachable-, 1 -destination host unreachable-, 4 -Fragmentation required and DF flag set-, and so on)&lt;/li&gt;
&lt;li&gt;Checksum is, as you could guess, a field with the checksum of the packet used to &amp;#8220;ensure&amp;#8221; the integrity of the packet through the link.&lt;/li&gt;
&lt;li&gt;Identifier and sequence number fields are used to create &amp;#8220;streams&amp;#8221; of ICMP packets, so you could send a burst of ICMP echo request and determine which of then got lost over the wire (or the waves).&lt;/li&gt;
&lt;li&gt;And finally the data field, that should contain an arbitrary array of bytes that the remote host must replicate on the ICMP echo reply (so we could determine that it received exactly the same data that we send).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, as I said, the data field can be any arbitrary array of bytes, so we can &amp;#8220;easily&amp;#8221; break any file on tiny bits and send it through the network without any problem. A few time ago I wrote some &lt;a href="https://github.com/Vidimensional/Icmp-File-Transfer" target="_blank"&gt;kind of quick and dirty proof of concept in Python&lt;/a&gt; (maybe one day I will make it cleaner but, you know, procrastination &lt;img alt=":P" class="wp-smiley" src="http://s2.wp.com/wp-includes/images/smilies/icon_razz.gif" /&gt; ) so you can to take a look at it if you want to know better how to send files over ICMP.&lt;/p&gt;
&lt;div class="wp-caption aligncenter" id="attachment_311" style="width: 510px;"&gt;&lt;a href="http://vidimensional.files.wordpress.com/2013/06/captura-de-pantalla-2013-06-21-a-las-08-00-08.png" target="_blank"&gt;&lt;img alt="" class="size-full wp-image-311 " height="333" src="http://vidimensional.files.wordpress.com/2013/06/captura-de-pantalla-2013-06-21-a-las-08-00-08.png?w=500&amp;#038;h=333" width="500" /&gt;&lt;/a&gt;&lt;p class="wp-caption-text"&gt;A bit of this post being sent through ICMP&lt;/p&gt;&lt;/div&gt;
&lt;p&gt;But it doesn&amp;#8217;t limit to send files, you also could build a tunnel to have full TCP connections over ICMP (&lt;a href="https://www.google.es/search?q=icmp+tunnel" target="_blank"&gt;you can check that isn&amp;#8217;t something new&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;For more information you could take a look at the &lt;a href="http://tools.ietf.org/html/rfc792" target="_blank"&gt;RFC 792 (INTERNET CONTROL MESSAGE PROTOCOL)&lt;/a&gt;.&lt;/p&gt;
&lt;br /&gt;  &lt;a href="http://feeds.wordpress.com/1.0/gocomments/vidimensional.wordpress.com/295/" rel="nofollow"&gt;&lt;img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/vidimensional.wordpress.com/295/" /&gt;&lt;/a&gt; &lt;img alt="" border="0" height="1" src="http://stats.wordpress.com/b.gif?host=vidimensional.wordpress.com&amp;#038;blog=1678830&amp;#038;post=295&amp;#038;subd=vidimensional&amp;#038;ref=&amp;#038;feed=1" width="1" /&gt;</description><author>Daniel Vidal</author><pubDate>Fri, 21 Jun 2013 06:02:51 +0000</pubDate></item><item><title>¿Qué es DevOps?</title><link>http://vidimensional.wordpress.com/2012/09/22/que-es-devops/</link><description>&lt;p&gt;Aprovechando que me he leído el libro &lt;a href="http://shop.oreilly.com/product/0636920026822.do" target="_blank"&gt;What is DevOps?&lt;/a&gt; (un e-book que, por cierto, es gratuito), voy a explicaros un poco de qué va el tema.&lt;/p&gt;
&lt;p&gt;La idea principal del DevOps es la fusión del departamento de sistemas con el departamento de desarrollo. ¿Por qué? Pues porque la división de estos dos departamentos hace que sus miembros se vean como &amp;#8220;enemigos&amp;#8221;. Digamos que el objetivo del trabajo del departamento de sistemas es el mantener la aplicación funcionando, mientras que el objetivo del trabajo del departamento de desarrollo es (simplificando) añadir nuevas funcionalidades a la aplicación. El problema es que esas nuevas funcionalidades suelen ser vistas por el departamento de sistemas como potenciales desestabilizadores de la aplicación, es decir como más trabajo, por lo que sistemas intentará retrasar al máximo el despliegue en producción de esas nuevas funcionalidades (ha de pasar un tiempo en el entorno de test), lo que será percibido por desarrollo como un menosprecio o amenaza a su trabajo y ya tenemos montado el mal rollo dentro de la empresa.&lt;/p&gt;
&lt;p&gt;Lo que propone DevOps es que uniendo ambos departamentos no sólo consigues una mayor harmonía dentro del departamento de IT, si no que consigues una mayor eficiencia a la hora de resolver incidencias. Por ejemplo, desarrollando la parte de logs ¿Cuántos de nosotros ha tenido un problema con una aplicación, ha ido a echarle un ojo al log y ver un galimatías que es incapaz de entender (no entremos cuando vemos el chorro de excepciones no capturadas tan típicas de una aplicación Java)? ¿Por qué? Pues por que el que ha programado la aplicación no sabe que información necesita sistemas, el es de desarrollo y pondrá la información que le resultaría útil a él o ella. Y no por ánimo de joder al pobre sysadmin a media hora de acabar su turno, si no simplemente porque no es consciente de lo que necesita el sysadmin.&lt;/p&gt;
&lt;p&gt;Otra de las cosas interesantes que comentan, es hacer que la aplicación se &amp;#8220;autoadministre&amp;#8221;. Dado que sistemas ahora participa en el desarrollo, se puede añadir código que gestione las típicas incidencias que se resuelven reiniciando un demonio (¿a que jode una alerta a las tres de la mañana para, simplemente, reiniciar un Apache y que ya no te vuelva el sueño?). Hacer la aplicación más &lt;em&gt;resiliente&lt;/em&gt; se le llama a esto. Si a esto le sumamos la aparición del IaaS (AWS, Rackspace, CloudBuilder, etc.) podemos hacer que la propia aplicación levante más frontales web cuando lo necesite, o pare un esclavo de base de datos y levante otro porque había fallos con la replicación de forma totalmente automática. Obviamente esto haría mucho más agradable el trabajo del sysadmin de guardia, que sólo sería despertado para incidencias gordas e &lt;em&gt;interesantes&lt;/em&gt;, no para chorradas.&lt;/p&gt;
&lt;p&gt;La verdad que es una idea que me parece interesante y creo que el futuro de sistemas a por ese camino, al menos en entornos web.&lt;/p&gt;
&lt;p&gt;PD: Ya sabéis empresas web que estéis interesadas en un sysadmin molón y que sepa de qué va el rollo DevOps os invito a visitar &lt;a href="http://www.linkedin.com/in/danielvidalrubia"&gt;mi perfil de LinkedIn&lt;/a&gt;. &lt;img alt=":P" class="wp-smiley" src="http://s2.wp.com/wp-includes/images/smilies/icon_razz.gif" /&gt; &lt;/p&gt;
&lt;br /&gt;  &lt;a href="http://feeds.wordpress.com/1.0/gocomments/vidimensional.wordpress.com/247/" rel="nofollow"&gt;&lt;img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/vidimensional.wordpress.com/247/" /&gt;&lt;/a&gt; &lt;img alt="" border="0" height="1" src="http://stats.wordpress.com/b.gif?host=vidimensional.wordpress.com&amp;#038;blog=1678830&amp;#038;post=247&amp;#038;subd=vidimensional&amp;#038;ref=&amp;#038;feed=1" width="1" /&gt;</description><author>Daniel Vidal</author><pubDate>Sat, 22 Sep 2012 09:06:40 +0000</pubDate></item><item><title>Instalar WebGoat de forma sencilla</title><link>http://vidimensional.wordpress.com/2012/09/20/instalar-webgoat-de-forma-sencill/</link><description>&lt;p&gt;&lt;a href="https://www.owasp.org/index.php/Category:OWASP_WebGoat_Project"&gt;WebGoat&lt;/a&gt; es una aplicación web deliberadamente vulnerable, creada para aprender y practicar lecciones de seguridad en aplicaciones web. Así que como ahora tengo tiempo me propuse instalármelo y practicar un poco, el problema vino en el momento que intenté instalarlo, ya que las instrucciones que ponen en la web son algo confusas (al menos para mí).&lt;/p&gt;
&lt;p&gt;Si vamos a la &lt;a href="http://code.google.com/p/webgoat/downloads/list"&gt;página de descargas&lt;/a&gt;  (al menos en el momento de escribir éste artículo), vemos que se distribuye de dos formas: un paquete .zip para Windows (o eso se deduce, erróneamente, al leer el nombre del fichero) y en un fichero .war. Entiendo que todo aquél que vea esta situación y lo quiera desplegar en una máquina no Windows, se bajaría el .war, instalaría un Tomcat, desplegaría la aplicación y luego configuraría el Tomcat para que la aplicación funcione correctamente. El problemilla es que esas configuraciones no están documentadas en ningún lado y las tienes que ir viendo por &amp;#8220;ingeniería inversa&amp;#8221; (como mínimo vi que se tenían que definir los roles en tomcat-users.xml). Pues vaya rollo ¿no? Aunque para un sysadmin como yo, con los huevos &amp;#8220;pelaos&amp;#8221; de desplegar aplicaciones sobre Tomcat, tampoco sería un trabajo muy arduo &lt;img alt=":P" class="wp-smiley" src="http://s2.wp.com/wp-includes/images/smilies/icon_razz.gif" /&gt; &lt;/p&gt;
&lt;p&gt;Aunque si le echamos un ojo al paquete para Windows, vemos que hay un directorio con la aplicación desplegada y el Tomcat configurado. Y como Tomcat está escrito en Java pues &amp;#8220;Run everywhere&amp;#8221; y usamos este paquete para nuestro Linux:&lt;/p&gt;
&lt;pre class="brush: bash; title: ; notranslate"&gt;
cd /tmp
wget -c http://webgoat.googlecode.com/files/WebGoat-5.4-OWASP_Standard_Win32.zip
unzip WebGoat-5.4-OWASP_Standard_Win32.zip
mv WebGoat-5.4/tomcat /opt/WebGoat-5.4
chmod +x /opt/WebGoat-5.4/bin/catalina.sh
ln -s /opt/WebGoat-5.4/bin/catalina.sh /etc/init.d/WebGoat
&lt;/pre&gt;
&lt;p&gt;De este modo ya podemos levantar/parar la aplicación WebGoat mediante&lt;/p&gt;
&lt;pre class="brush: bash; title: ; notranslate"&gt;
/etc/init.d/WebGoat start
/etc/init.d/WebGoat stop
&lt;/pre&gt;
&lt;p&gt;Y por defecto la tendremos escuchando por el puerto 8080, por lo que entramos a &lt;a href="http://hostname:8080/WebGoat/attack"&gt;http://hostname:8080/WebGoat/attack&lt;/a&gt; y ya podemos empezar a jugar &lt;img alt=":)" class="wp-smiley" src="http://s0.wp.com/wp-includes/images/smilies/icon_smile.gif" /&gt; &lt;/p&gt;
&lt;p&gt;PD: Ya sé que para mis avezados lectores esta advertencia no es necesaria, pero por si acaso. Recordad que esta aplicación &lt;strong&gt;es vulnerable&lt;/strong&gt; por lo que no la instaléis en ninguna máquina que sea accesible desde Internet.&lt;/p&gt;
&lt;br /&gt;  &lt;a href="http://feeds.wordpress.com/1.0/gocomments/vidimensional.wordpress.com/267/" rel="nofollow"&gt;&lt;img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/vidimensional.wordpress.com/267/" /&gt;&lt;/a&gt; &lt;img alt="" border="0" height="1" src="http://stats.wordpress.com/b.gif?host=vidimensional.wordpress.com&amp;#038;blog=1678830&amp;#038;post=267&amp;#038;subd=vidimensional&amp;#038;ref=&amp;#038;feed=1" width="1" /&gt;</description><author>Daniel Vidal</author><pubDate>Thu, 20 Sep 2012 12:17:41 +0000</pubDate></item><item><title>Compartir ficheros en una red local de forma fácil y sencilla (con Netcat)</title><link>http://vidimensional.wordpress.com/2012/07/15/compartir-ficheros-en-una-red-local-de-forma-facil-y-sencilla-con-netcat/</link><description>&lt;p&gt;Una de las cosas que más rabia me dan es cuando quieres copiar un fichero (algo grande) entre dos equipos que tienes en casa.&lt;/p&gt;
&lt;p&gt;Un método sencillo y rápido es copiarlo en un pendrive y moverlo de un equipo a otro, el problema es que nunca encuentro un pendrive que funcione cuando lo necesito (tengo un montón de petados).&lt;/p&gt;
&lt;p&gt;Otra idea sería la de configurar un servidor de SSH en un equipo y copiarlos por SCP, lo cual también sería efectivo, pero te obliga a instalar y configurar un servidor de SSH, otro problema sería que podrías estar desperdiciando ancho de banda debido a que el fichero se tiene que cifrar antes de enviar (tal vez en la red de casa te dé igual, pero si estás en la oficina podrías estar desperdiciando una buena conexión a gigabit).&lt;/p&gt;
&lt;p&gt;Para ello puedes emplear &lt;a href="http://nc110.sourceforge.net/"&gt;Netcat&lt;/a&gt; (la navaja suiza de los administradores de red &lt;img alt=":P" class="wp-smiley" src="http://s2.wp.com/wp-includes/images/smilies/icon_razz.gif" /&gt; ), simplemente ejecuta lo siguiente en el equipo donde quieres recibir el fichero:&lt;/p&gt;
&lt;pre class="brush: bash; title: ; notranslate"&gt;
nc -l ${puerto} &amp;gt; ${nombredelfichero}
&lt;/pre&gt;
&lt;p&gt;Lo que arrancará una instancia de Netcat que escuchará el puerto que le hayas indicado en $puerto. En el equipo que esté el fichero que quieres copiar escribe:&lt;/p&gt;
&lt;pre class="brush: bash; title: ; notranslate"&gt;
cat ${nombredelfichero} | nc ${ipdestino} ${puerto}
&lt;/pre&gt;
&lt;p&gt;Lo que enviará el fichero hacia el equipo destino, sin &amp;#8220;perder tiempo&amp;#8221; cifrando el contenido y sin tener que instalar ni configurar ningún extra.&lt;/p&gt;
&lt;br /&gt;  &lt;a href="http://feeds.wordpress.com/1.0/gocomments/vidimensional.wordpress.com/223/" rel="nofollow"&gt;&lt;img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/vidimensional.wordpress.com/223/" /&gt;&lt;/a&gt; &lt;img alt="" border="0" height="1" src="http://stats.wordpress.com/b.gif?host=vidimensional.wordpress.com&amp;#038;blog=1678830&amp;#038;post=223&amp;#038;subd=vidimensional&amp;#038;ref=&amp;#038;feed=1" width="1" /&gt;</description><author>Daniel Vidal</author><pubDate>Sun, 15 Jul 2012 20:28:27 +0000</pubDate></item><item><title>Generando certificados X.509 falsos al vuelo en Python para un ataque &#8220;Man in the Middle&#8221;</title><link>http://vidimensional.wordpress.com/2012/07/15/generando-certificados-x-509-falsos-al-vuelo/</link><description>&lt;p&gt;&lt;strong&gt;EDIT (15/07/12 20:37):&lt;/strong&gt; Por ciertos &lt;a href="http://es.wikipedia.org/wiki/Acuerdo_de_confidencialidad"&gt;motivos que no vienen al caso&lt;/a&gt;, el contenido de la entrada ha sido eliminado. De todos modos lo que aquí se comentaba se puede encontrar fácilmente en otros sitios de la red que son de libre acceso.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/hubert3/iSniff/blob/master/iSniff.py#L63"&gt;Ejemplo empleando M2Crypto&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/cortesi/netlib/blob/master/netlib/certutils.py#L79"&gt;Ejemplo empleando OpenSSL&lt;/a&gt;&lt;/p&gt;
&lt;br /&gt;  &lt;a href="http://feeds.wordpress.com/1.0/gocomments/vidimensional.wordpress.com/188/" rel="nofollow"&gt;&lt;img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/vidimensional.wordpress.com/188/" /&gt;&lt;/a&gt; &lt;img alt="" border="0" height="1" src="http://stats.wordpress.com/b.gif?host=vidimensional.wordpress.com&amp;#038;blog=1678830&amp;#038;post=188&amp;#038;subd=vidimensional&amp;#038;ref=&amp;#038;feed=1" width="1" /&gt;</description><author>Daniel Vidal</author><pubDate>Sun, 15 Jul 2012 15:40:19 +0000</pubDate></item><item><title>Borrón y cuenta nueva</title><link>http://vidimensional.wordpress.com/2012/07/14/borron-y-cuenta-nueva/</link><description>&lt;p&gt;Después de unos meses de locura intentando tener acabado el PFC para la convocatoria de este junio, por fin soy libre. Así que he decidido desempolvar este blog que tenía bastante aparcado.&lt;/p&gt;
&lt;p&gt;Dado que las pocas entradas que tenía eran poco relevantes, he decidido cepillármelas y empezar desde 0 (bueno en realidad he mantenido el pequeño tutorial sobre como &lt;a href="http://vidimensional.wordpress.com/2007/11/24/usar-memorias-usb-y-compartir-carpetas-con-virtualbox-ose/" title="Usar memorias USB y compartir carpetas con VirtualBox OSE"&gt;montar un USB físico en la versión libre de VirtualBox&lt;/a&gt;, que era la única que tenía enlaces desde el exterior y no era plan de &amp;#8220;romper el Internet&amp;#8221; &lt;img alt=":P" class="wp-smiley" src="http://s2.wp.com/wp-includes/images/smilies/icon_razz.gif" /&gt; )&lt;/p&gt;
&lt;p&gt;Me gustaría enfocar la temática de este blog sobre sistemas, redes, seguridad informática y programación. Especialmente con artículos técnicos y algo de opinión, aunque no me gustaría llenar esto de tutoriales, más que nada porque no creo que un blog sea el medio apropiado, tal vez si empiezan a salir demasiados tutoriales mire de abrir una wiki o algo.&lt;/p&gt;
&lt;p&gt;Así que espero tener suficiente tiempo y paciencia para hacer de este sitio algo útil para la comunidad&amp;#8230; &lt;img alt=":)" class="wp-smiley" src="http://s0.wp.com/wp-includes/images/smilies/icon_smile.gif" /&gt; &lt;/p&gt;
&lt;br /&gt;  &lt;a href="http://feeds.wordpress.com/1.0/gocomments/vidimensional.wordpress.com/151/" rel="nofollow"&gt;&lt;img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/vidimensional.wordpress.com/151/" /&gt;&lt;/a&gt; &lt;img alt="" border="0" height="1" src="http://stats.wordpress.com/b.gif?host=vidimensional.wordpress.com&amp;#038;blog=1678830&amp;#038;post=151&amp;#038;subd=vidimensional&amp;#038;ref=&amp;#038;feed=1" width="1" /&gt;</description><author>Daniel Vidal</author><pubDate>Sat, 14 Jul 2012 18:26:16 +0000</pubDate></item><item><title>Usar memorias USB y compartir carpetas con VirtualBox OSE</title><link>http://vidimensional.wordpress.com/2007/11/24/usar-memorias-usb-y-compartir-carpetas-con-virtualbox-ose/</link><description>&lt;p&gt;Buenas, hoy traigo un HowTo muy sencillo para ir empezando con la sección más &amp;#8220;técnica&amp;#8221; de este blog.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Una de las &lt;em&gt;features&lt;/em&gt;más interesantes, para el usuario medio, de la versión privativa de VirtualBox, es la capacidad de montar las unidades USB en el sistema virtual. Lo cual es útil cuando quieres transportar cómodamente los datos del sistema virtual, por ejemplo para prácticas de universidad.&lt;/p&gt;
&lt;p&gt;Pero esta característica es emulable gracias a que en los sistemas Unix todo se considera un fichero (y las unidades USB también &lt;img alt=";)" class="wp-smiley" src="http://s1.wp.com/wp-includes/images/smilies/icon_wink.gif" /&gt; ).&lt;/p&gt;
&lt;p&gt;Antes de nada veamos como compartir un directorio de nuestro GNU/Linux con un Windows XP virtualizado.Primero debemos de indicarle al Virtualbox cuál es la carpeta que vamos a compartir. Para ello escribimos en la consola:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;ataulfo@vidimensional:~$ vboxmanage sharedfolder add Nombre -name /carpeta/carpeta -hostpath /carpeta/carpeta&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Donde &amp;#8216;Nombre&amp;#8217; es el nombre que tenga la maquina virtual en Virtual Box (ojo con las mayúsculas) y /carpeta/carpeta pues la ruta del directorio que vamos a compartir.&lt;/p&gt;
&lt;p&gt;Luego entramos en Windows XP y una vez allí, abre &amp;#8220;Mi PC&amp;#8221; y en el menú &amp;#8220;Herramientas&amp;#8221; &amp;gt; &amp;#8220;Conectar una unidad de red&amp;#8221; seleccionamos la unidad que nos plazca (por defecto, Z:) y en la dirección debemos poner: &lt;em&gt;VBOXSVR/carpeta/carpeta&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Y si todo a transcurrido normalmente veremos una nueva unidad de red en nuestro Mi Pc, que podremos usar normalmente.&lt;/p&gt;
&lt;p&gt;Para poder usar la unidad USB, simplemente debemos compartir el directorio donde nos monte el USB (&lt;em&gt;/media/usb&lt;/em&gt;, por ejemplo) y ya tendremos acceso a nuestra memoria USB.&lt;/p&gt;
&lt;br /&gt;&lt;img alt="" border="0" src="http://feeds.wordpress.com/1.0/categories/vidimensional.wordpress.com/21/" /&gt; &lt;img alt="" border="0" src="http://feeds.wordpress.com/1.0/tags/vidimensional.wordpress.com/21/" /&gt; &lt;a href="http://feeds.wordpress.com/1.0/gocomments/vidimensional.wordpress.com/21/" rel="nofollow"&gt;&lt;img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/vidimensional.wordpress.com/21/" /&gt;&lt;/a&gt; &lt;img alt="" border="0" height="1" src="http://stats.wordpress.com/b.gif?host=vidimensional.wordpress.com&amp;#038;blog=1678830&amp;#038;post=21&amp;#038;subd=vidimensional&amp;#038;ref=&amp;#038;feed=1" width="1" /&gt;</description><author>Daniel Vidal</author><pubDate>Sat, 24 Nov 2007 15:29:35 +0000</pubDate></item></channel></rss>